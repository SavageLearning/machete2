/*
 * This file is generated by jOOQ.
 */
package com.savagelearning.machete.core.tables.daos;


import com.savagelearning.machete.core.tables.Activitysignins;
import com.savagelearning.machete.core.tables.records.ActivitysigninsRecord;

import java.time.LocalDateTime;
import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ActivitysigninsDao extends DAOImpl<ActivitysigninsRecord, com.savagelearning.machete.core.tables.pojos.Activitysignins, Integer> {

    /**
     * Create a new ActivitysigninsDao without any configuration
     */
    public ActivitysigninsDao() {
        super(Activitysignins.ACTIVITYSIGNINS, com.savagelearning.machete.core.tables.pojos.Activitysignins.class);
    }

    /**
     * Create a new ActivitysigninsDao with an attached configuration
     */
    public ActivitysigninsDao(Configuration configuration) {
        super(Activitysignins.ACTIVITYSIGNINS, com.savagelearning.machete.core.tables.pojos.Activitysignins.class, configuration);
    }

    @Override
    public Integer getId(com.savagelearning.machete.core.tables.pojos.Activitysignins object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Activitysignins> fetchRangeOfId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Activitysignins.ACTIVITYSIGNINS.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Activitysignins> fetchById(Integer... values) {
        return fetch(Activitysignins.ACTIVITYSIGNINS.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.savagelearning.machete.core.tables.pojos.Activitysignins fetchOneById(Integer value) {
        return fetchOne(Activitysignins.ACTIVITYSIGNINS.ID, value);
    }

    /**
     * Fetch records that have <code>ActivityID BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Activitysignins> fetchRangeOfActivityid(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Activitysignins.ACTIVITYSIGNINS.ACTIVITYID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>ActivityID IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Activitysignins> fetchByActivityid(Integer... values) {
        return fetch(Activitysignins.ACTIVITYSIGNINS.ACTIVITYID, values);
    }

    /**
     * Fetch records that have <code>dwccardnum BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Activitysignins> fetchRangeOfDwccardnum(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Activitysignins.ACTIVITYSIGNINS.DWCCARDNUM, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>dwccardnum IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Activitysignins> fetchByDwccardnum(Integer... values) {
        return fetch(Activitysignins.ACTIVITYSIGNINS.DWCCARDNUM, values);
    }

    /**
     * Fetch records that have <code>memberStatus BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Activitysignins> fetchRangeOfMemberstatus(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Activitysignins.ACTIVITYSIGNINS.MEMBERSTATUS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>memberStatus IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Activitysignins> fetchByMemberstatus(Integer... values) {
        return fetch(Activitysignins.ACTIVITYSIGNINS.MEMBERSTATUS, values);
    }

    /**
     * Fetch records that have <code>dateforsignin BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Activitysignins> fetchRangeOfDateforsignin(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Activitysignins.ACTIVITYSIGNINS.DATEFORSIGNIN, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>dateforsignin IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Activitysignins> fetchByDateforsignin(LocalDateTime... values) {
        return fetch(Activitysignins.ACTIVITYSIGNINS.DATEFORSIGNIN, values);
    }

    /**
     * Fetch records that have <code>datecreated BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Activitysignins> fetchRangeOfDatecreated(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Activitysignins.ACTIVITYSIGNINS.DATECREATED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>datecreated IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Activitysignins> fetchByDatecreated(LocalDateTime... values) {
        return fetch(Activitysignins.ACTIVITYSIGNINS.DATECREATED, values);
    }

    /**
     * Fetch records that have <code>dateupdated BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Activitysignins> fetchRangeOfDateupdated(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Activitysignins.ACTIVITYSIGNINS.DATEUPDATED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>dateupdated IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Activitysignins> fetchByDateupdated(LocalDateTime... values) {
        return fetch(Activitysignins.ACTIVITYSIGNINS.DATEUPDATED, values);
    }

    /**
     * Fetch records that have <code>Createdby BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Activitysignins> fetchRangeOfCreatedby(String lowerInclusive, String upperInclusive) {
        return fetchRange(Activitysignins.ACTIVITYSIGNINS.CREATEDBY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>Createdby IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Activitysignins> fetchByCreatedby(String... values) {
        return fetch(Activitysignins.ACTIVITYSIGNINS.CREATEDBY, values);
    }

    /**
     * Fetch records that have <code>Updatedby BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Activitysignins> fetchRangeOfUpdatedby(String lowerInclusive, String upperInclusive) {
        return fetchRange(Activitysignins.ACTIVITYSIGNINS.UPDATEDBY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>Updatedby IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Activitysignins> fetchByUpdatedby(String... values) {
        return fetch(Activitysignins.ACTIVITYSIGNINS.UPDATEDBY, values);
    }

    /**
     * Fetch records that have <code>personID BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Activitysignins> fetchRangeOfPersonid(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Activitysignins.ACTIVITYSIGNINS.PERSONID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>personID IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Activitysignins> fetchByPersonid(Integer... values) {
        return fetch(Activitysignins.ACTIVITYSIGNINS.PERSONID, values);
    }
}
