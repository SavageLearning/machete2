/*
 * This file is generated by jOOQ.
 */
package com.savagelearning.machete.core.tables.daos;


import com.savagelearning.machete.core.tables.Lookups;
import com.savagelearning.machete.core.tables.records.LookupsRecord;

import java.time.LocalDateTime;
import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LookupsDao extends DAOImpl<LookupsRecord, com.savagelearning.machete.core.tables.pojos.Lookups, Integer> {

    /**
     * Create a new LookupsDao without any configuration
     */
    public LookupsDao() {
        super(Lookups.LOOKUPS, com.savagelearning.machete.core.tables.pojos.Lookups.class);
    }

    /**
     * Create a new LookupsDao with an attached configuration
     */
    public LookupsDao(Configuration configuration) {
        super(Lookups.LOOKUPS, com.savagelearning.machete.core.tables.pojos.Lookups.class, configuration);
    }

    @Override
    public Integer getId(com.savagelearning.machete.core.tables.pojos.Lookups object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Lookups> fetchRangeOfId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Lookups.LOOKUPS.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Lookups> fetchById(Integer... values) {
        return fetch(Lookups.LOOKUPS.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.savagelearning.machete.core.tables.pojos.Lookups fetchOneById(Integer value) {
        return fetchOne(Lookups.LOOKUPS.ID, value);
    }

    /**
     * Fetch records that have <code>category BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Lookups> fetchRangeOfCategory(String lowerInclusive, String upperInclusive) {
        return fetchRange(Lookups.LOOKUPS.CATEGORY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>category IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Lookups> fetchByCategory(String... values) {
        return fetch(Lookups.LOOKUPS.CATEGORY, values);
    }

    /**
     * Fetch records that have <code>text_EN BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Lookups> fetchRangeOfTextEn(String lowerInclusive, String upperInclusive) {
        return fetchRange(Lookups.LOOKUPS.TEXT_EN, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>text_EN IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Lookups> fetchByTextEn(String... values) {
        return fetch(Lookups.LOOKUPS.TEXT_EN, values);
    }

    /**
     * Fetch records that have <code>text_ES BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Lookups> fetchRangeOfTextEs(String lowerInclusive, String upperInclusive) {
        return fetchRange(Lookups.LOOKUPS.TEXT_ES, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>text_ES IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Lookups> fetchByTextEs(String... values) {
        return fetch(Lookups.LOOKUPS.TEXT_ES, values);
    }

    /**
     * Fetch records that have <code>selected BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Lookups> fetchRangeOfSelected(String lowerInclusive, String upperInclusive) {
        return fetchRange(Lookups.LOOKUPS.SELECTED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>selected IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Lookups> fetchBySelected(String... values) {
        return fetch(Lookups.LOOKUPS.SELECTED, values);
    }

    /**
     * Fetch records that have <code>subcategory BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Lookups> fetchRangeOfSubcategory(String lowerInclusive, String upperInclusive) {
        return fetchRange(Lookups.LOOKUPS.SUBCATEGORY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>subcategory IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Lookups> fetchBySubcategory(String... values) {
        return fetch(Lookups.LOOKUPS.SUBCATEGORY, values);
    }

    /**
     * Fetch records that have <code>level BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Lookups> fetchRangeOfLevel(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Lookups.LOOKUPS.LEVEL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>level IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Lookups> fetchByLevel(Integer... values) {
        return fetch(Lookups.LOOKUPS.LEVEL, values);
    }

    /**
     * Fetch records that have <code>wage BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Lookups> fetchRangeOfWage(Double lowerInclusive, Double upperInclusive) {
        return fetchRange(Lookups.LOOKUPS.WAGE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>wage IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Lookups> fetchByWage(Double... values) {
        return fetch(Lookups.LOOKUPS.WAGE, values);
    }

    /**
     * Fetch records that have <code>minHour BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Lookups> fetchRangeOfMinhour(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Lookups.LOOKUPS.MINHOUR, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>minHour IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Lookups> fetchByMinhour(Integer... values) {
        return fetch(Lookups.LOOKUPS.MINHOUR, values);
    }

    /**
     * Fetch records that have <code>fixedJob BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Lookups> fetchRangeOfFixedjob(String lowerInclusive, String upperInclusive) {
        return fetchRange(Lookups.LOOKUPS.FIXEDJOB, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>fixedJob IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Lookups> fetchByFixedjob(String... values) {
        return fetch(Lookups.LOOKUPS.FIXEDJOB, values);
    }

    /**
     * Fetch records that have <code>sortorder BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Lookups> fetchRangeOfSortorder(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Lookups.LOOKUPS.SORTORDER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>sortorder IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Lookups> fetchBySortorder(Integer... values) {
        return fetch(Lookups.LOOKUPS.SORTORDER, values);
    }

    /**
     * Fetch records that have <code>typeOfWorkID BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Lookups> fetchRangeOfTypeofworkid(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Lookups.LOOKUPS.TYPEOFWORKID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>typeOfWorkID IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Lookups> fetchByTypeofworkid(Integer... values) {
        return fetch(Lookups.LOOKUPS.TYPEOFWORKID, values);
    }

    /**
     * Fetch records that have <code>speciality BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Lookups> fetchRangeOfSpeciality(String lowerInclusive, String upperInclusive) {
        return fetchRange(Lookups.LOOKUPS.SPECIALITY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>speciality IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Lookups> fetchBySpeciality(String... values) {
        return fetch(Lookups.LOOKUPS.SPECIALITY, values);
    }

    /**
     * Fetch records that have <code>ltrCode BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Lookups> fetchRangeOfLtrcode(String lowerInclusive, String upperInclusive) {
        return fetchRange(Lookups.LOOKUPS.LTRCODE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>ltrCode IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Lookups> fetchByLtrcode(String... values) {
        return fetch(Lookups.LOOKUPS.LTRCODE, values);
    }

    /**
     * Fetch records that have <code>datecreated BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Lookups> fetchRangeOfDatecreated(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Lookups.LOOKUPS.DATECREATED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>datecreated IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Lookups> fetchByDatecreated(LocalDateTime... values) {
        return fetch(Lookups.LOOKUPS.DATECREATED, values);
    }

    /**
     * Fetch records that have <code>dateupdated BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Lookups> fetchRangeOfDateupdated(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Lookups.LOOKUPS.DATEUPDATED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>dateupdated IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Lookups> fetchByDateupdated(LocalDateTime... values) {
        return fetch(Lookups.LOOKUPS.DATEUPDATED, values);
    }

    /**
     * Fetch records that have <code>Createdby BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Lookups> fetchRangeOfCreatedby(String lowerInclusive, String upperInclusive) {
        return fetchRange(Lookups.LOOKUPS.CREATEDBY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>Createdby IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Lookups> fetchByCreatedby(String... values) {
        return fetch(Lookups.LOOKUPS.CREATEDBY, values);
    }

    /**
     * Fetch records that have <code>Updatedby BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Lookups> fetchRangeOfUpdatedby(String lowerInclusive, String upperInclusive) {
        return fetchRange(Lookups.LOOKUPS.UPDATEDBY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>Updatedby IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Lookups> fetchByUpdatedby(String... values) {
        return fetch(Lookups.LOOKUPS.UPDATEDBY, values);
    }

    /**
     * Fetch records that have <code>emailTemplate BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Lookups> fetchRangeOfEmailtemplate(String lowerInclusive, String upperInclusive) {
        return fetchRange(Lookups.LOOKUPS.EMAILTEMPLATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>emailTemplate IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Lookups> fetchByEmailtemplate(String... values) {
        return fetch(Lookups.LOOKUPS.EMAILTEMPLATE, values);
    }

    /**
     * Fetch records that have <code>key BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Lookups> fetchRangeOfKey(String lowerInclusive, String upperInclusive) {
        return fetchRange(Lookups.LOOKUPS.KEY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>key IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Lookups> fetchByKey(String... values) {
        return fetch(Lookups.LOOKUPS.KEY, values);
    }

    /**
     * Fetch records that have <code>skillDescriptionEn BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Lookups> fetchRangeOfSkilldescriptionen(String lowerInclusive, String upperInclusive) {
        return fetchRange(Lookups.LOOKUPS.SKILLDESCRIPTIONEN, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>skillDescriptionEn IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Lookups> fetchBySkilldescriptionen(String... values) {
        return fetch(Lookups.LOOKUPS.SKILLDESCRIPTIONEN, values);
    }

    /**
     * Fetch records that have <code>skillDescriptionEs BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Lookups> fetchRangeOfSkilldescriptiones(String lowerInclusive, String upperInclusive) {
        return fetchRange(Lookups.LOOKUPS.SKILLDESCRIPTIONES, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>skillDescriptionEs IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Lookups> fetchBySkilldescriptiones(String... values) {
        return fetch(Lookups.LOOKUPS.SKILLDESCRIPTIONES, values);
    }

    /**
     * Fetch records that have <code>minimumCost BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Lookups> fetchRangeOfMinimumcost(Double lowerInclusive, Double upperInclusive) {
        return fetchRange(Lookups.LOOKUPS.MINIMUMCOST, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>minimumCost IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Lookups> fetchByMinimumcost(Double... values) {
        return fetch(Lookups.LOOKUPS.MINIMUMCOST, values);
    }

    /**
     * Fetch records that have <code>active BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Lookups> fetchRangeOfActive(String lowerInclusive, String upperInclusive) {
        return fetchRange(Lookups.LOOKUPS.ACTIVE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>active IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Lookups> fetchByActive(String... values) {
        return fetch(Lookups.LOOKUPS.ACTIVE, values);
    }
}
