/*
 * This file is generated by jOOQ.
 */
package com.savagelearning.machete.core.tables.daos;


import com.savagelearning.machete.core.tables.Emailworkorder;
import com.savagelearning.machete.core.tables.records.EmailworkorderRecord;

import java.time.LocalDateTime;
import java.util.List;

import org.jooq.Configuration;
import org.jooq.Record2;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EmailworkorderDao extends DAOImpl<EmailworkorderRecord, com.savagelearning.machete.core.tables.pojos.Emailworkorder, Record2<Integer, Integer>> {

    /**
     * Create a new EmailworkorderDao without any configuration
     */
    public EmailworkorderDao() {
        super(Emailworkorder.EMAILWORKORDER, com.savagelearning.machete.core.tables.pojos.Emailworkorder.class);
    }

    /**
     * Create a new EmailworkorderDao with an attached configuration
     */
    public EmailworkorderDao(Configuration configuration) {
        super(Emailworkorder.EMAILWORKORDER, com.savagelearning.machete.core.tables.pojos.Emailworkorder.class, configuration);
    }

    @Override
    public Record2<Integer, Integer> getId(com.savagelearning.machete.core.tables.pojos.Emailworkorder object) {
        return compositeKeyRecord(object.getEmailId(), object.getWorkorderId());
    }

    /**
     * Fetch records that have <code>WorkOrder_ID BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Emailworkorder> fetchRangeOfWorkorderId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Emailworkorder.EMAILWORKORDER.WORKORDER_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>WorkOrder_ID IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Emailworkorder> fetchByWorkorderId(Integer... values) {
        return fetch(Emailworkorder.EMAILWORKORDER.WORKORDER_ID, values);
    }

    /**
     * Fetch records that have <code>Email_ID BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Emailworkorder> fetchRangeOfEmailId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Emailworkorder.EMAILWORKORDER.EMAIL_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>Email_ID IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Emailworkorder> fetchByEmailId(Integer... values) {
        return fetch(Emailworkorder.EMAILWORKORDER.EMAIL_ID, values);
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Emailworkorder> fetchRangeOfId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Emailworkorder.EMAILWORKORDER.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Emailworkorder> fetchById(Integer... values) {
        return fetch(Emailworkorder.EMAILWORKORDER.ID, values);
    }

    /**
     * Fetch records that have <code>datecreated BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Emailworkorder> fetchRangeOfDatecreated(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Emailworkorder.EMAILWORKORDER.DATECREATED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>datecreated IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Emailworkorder> fetchByDatecreated(LocalDateTime... values) {
        return fetch(Emailworkorder.EMAILWORKORDER.DATECREATED, values);
    }

    /**
     * Fetch records that have <code>dateupdated BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Emailworkorder> fetchRangeOfDateupdated(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Emailworkorder.EMAILWORKORDER.DATEUPDATED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>dateupdated IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Emailworkorder> fetchByDateupdated(LocalDateTime... values) {
        return fetch(Emailworkorder.EMAILWORKORDER.DATEUPDATED, values);
    }

    /**
     * Fetch records that have <code>Createdby BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Emailworkorder> fetchRangeOfCreatedby(String lowerInclusive, String upperInclusive) {
        return fetchRange(Emailworkorder.EMAILWORKORDER.CREATEDBY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>Createdby IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Emailworkorder> fetchByCreatedby(String... values) {
        return fetch(Emailworkorder.EMAILWORKORDER.CREATEDBY, values);
    }

    /**
     * Fetch records that have <code>Updatedby BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Emailworkorder> fetchRangeOfUpdatedby(String lowerInclusive, String upperInclusive) {
        return fetchRange(Emailworkorder.EMAILWORKORDER.UPDATEDBY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>Updatedby IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Emailworkorder> fetchByUpdatedby(String... values) {
        return fetch(Emailworkorder.EMAILWORKORDER.UPDATEDBY, values);
    }
}
