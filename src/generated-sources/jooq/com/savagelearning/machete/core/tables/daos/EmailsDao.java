/*
 * This file is generated by jOOQ.
 */
package com.savagelearning.machete.core.tables.daos;


import com.savagelearning.machete.core.tables.Emails;
import com.savagelearning.machete.core.tables.records.EmailsRecord;

import java.time.LocalDateTime;
import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EmailsDao extends DAOImpl<EmailsRecord, com.savagelearning.machete.core.tables.pojos.Emails, Integer> {

    /**
     * Create a new EmailsDao without any configuration
     */
    public EmailsDao() {
        super(Emails.EMAILS, com.savagelearning.machete.core.tables.pojos.Emails.class);
    }

    /**
     * Create a new EmailsDao with an attached configuration
     */
    public EmailsDao(Configuration configuration) {
        super(Emails.EMAILS, com.savagelearning.machete.core.tables.pojos.Emails.class, configuration);
    }

    @Override
    public Integer getId(com.savagelearning.machete.core.tables.pojos.Emails object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Emails> fetchRangeOfId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Emails.EMAILS.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Emails> fetchById(Integer... values) {
        return fetch(Emails.EMAILS.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.savagelearning.machete.core.tables.pojos.Emails fetchOneById(Integer value) {
        return fetchOne(Emails.EMAILS.ID, value);
    }

    /**
     * Fetch records that have <code>emailFrom BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Emails> fetchRangeOfEmailfrom(String lowerInclusive, String upperInclusive) {
        return fetchRange(Emails.EMAILS.EMAILFROM, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>emailFrom IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Emails> fetchByEmailfrom(String... values) {
        return fetch(Emails.EMAILS.EMAILFROM, values);
    }

    /**
     * Fetch records that have <code>emailTo BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Emails> fetchRangeOfEmailto(String lowerInclusive, String upperInclusive) {
        return fetchRange(Emails.EMAILS.EMAILTO, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>emailTo IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Emails> fetchByEmailto(String... values) {
        return fetch(Emails.EMAILS.EMAILTO, values);
    }

    /**
     * Fetch records that have <code>subject BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Emails> fetchRangeOfSubject(String lowerInclusive, String upperInclusive) {
        return fetchRange(Emails.EMAILS.SUBJECT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>subject IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Emails> fetchBySubject(String... values) {
        return fetch(Emails.EMAILS.SUBJECT, values);
    }

    /**
     * Fetch records that have <code>body BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Emails> fetchRangeOfBody(String lowerInclusive, String upperInclusive) {
        return fetchRange(Emails.EMAILS.BODY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>body IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Emails> fetchByBody(String... values) {
        return fetch(Emails.EMAILS.BODY, values);
    }

    /**
     * Fetch records that have <code>transmitAttempts BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Emails> fetchRangeOfTransmitattempts(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Emails.EMAILS.TRANSMITATTEMPTS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>transmitAttempts IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Emails> fetchByTransmitattempts(Integer... values) {
        return fetch(Emails.EMAILS.TRANSMITATTEMPTS, values);
    }

    /**
     * Fetch records that have <code>statusID BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Emails> fetchRangeOfStatusid(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Emails.EMAILS.STATUSID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>statusID IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Emails> fetchByStatusid(Integer... values) {
        return fetch(Emails.EMAILS.STATUSID, values);
    }

    /**
     * Fetch records that have <code>lastAttempt BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Emails> fetchRangeOfLastattempt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Emails.EMAILS.LASTATTEMPT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>lastAttempt IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Emails> fetchByLastattempt(LocalDateTime... values) {
        return fetch(Emails.EMAILS.LASTATTEMPT, values);
    }

    /**
     * Fetch records that have <code>attachment BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Emails> fetchRangeOfAttachment(String lowerInclusive, String upperInclusive) {
        return fetchRange(Emails.EMAILS.ATTACHMENT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>attachment IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Emails> fetchByAttachment(String... values) {
        return fetch(Emails.EMAILS.ATTACHMENT, values);
    }

    /**
     * Fetch records that have <code>attachmentContentType BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Emails> fetchRangeOfAttachmentcontenttype(String lowerInclusive, String upperInclusive) {
        return fetchRange(Emails.EMAILS.ATTACHMENTCONTENTTYPE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>attachmentContentType IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Emails> fetchByAttachmentcontenttype(String... values) {
        return fetch(Emails.EMAILS.ATTACHMENTCONTENTTYPE, values);
    }

    /**
     * Fetch records that have <code>RowVersion BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Emails> fetchRangeOfRowversion(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Emails.EMAILS.ROWVERSION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>RowVersion IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Emails> fetchByRowversion(LocalDateTime... values) {
        return fetch(Emails.EMAILS.ROWVERSION, values);
    }

    /**
     * Fetch records that have <code>datecreated BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Emails> fetchRangeOfDatecreated(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Emails.EMAILS.DATECREATED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>datecreated IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Emails> fetchByDatecreated(LocalDateTime... values) {
        return fetch(Emails.EMAILS.DATECREATED, values);
    }

    /**
     * Fetch records that have <code>dateupdated BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Emails> fetchRangeOfDateupdated(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Emails.EMAILS.DATEUPDATED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>dateupdated IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Emails> fetchByDateupdated(LocalDateTime... values) {
        return fetch(Emails.EMAILS.DATEUPDATED, values);
    }

    /**
     * Fetch records that have <code>Createdby BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Emails> fetchRangeOfCreatedby(String lowerInclusive, String upperInclusive) {
        return fetchRange(Emails.EMAILS.CREATEDBY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>Createdby IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Emails> fetchByCreatedby(String... values) {
        return fetch(Emails.EMAILS.CREATEDBY, values);
    }

    /**
     * Fetch records that have <code>Updatedby BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Emails> fetchRangeOfUpdatedby(String lowerInclusive, String upperInclusive) {
        return fetchRange(Emails.EMAILS.UPDATEDBY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>Updatedby IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Emails> fetchByUpdatedby(String... values) {
        return fetch(Emails.EMAILS.UPDATEDBY, values);
    }
}
