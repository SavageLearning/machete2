/*
 * This file is generated by jOOQ.
 */
package com.savagelearning.machete.core.tables.daos;


import com.savagelearning.machete.core.tables.Workorders;
import com.savagelearning.machete.core.tables.records.WorkordersRecord;

import java.time.LocalDateTime;
import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class WorkordersDao extends DAOImpl<WorkordersRecord, com.savagelearning.machete.core.tables.pojos.Workorders, Integer> {

    /**
     * Create a new WorkordersDao without any configuration
     */
    public WorkordersDao() {
        super(Workorders.WORKORDERS, com.savagelearning.machete.core.tables.pojos.Workorders.class);
    }

    /**
     * Create a new WorkordersDao with an attached configuration
     */
    public WorkordersDao(Configuration configuration) {
        super(Workorders.WORKORDERS, com.savagelearning.machete.core.tables.pojos.Workorders.class, configuration);
    }

    @Override
    public Integer getId(com.savagelearning.machete.core.tables.pojos.Workorders object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workorders> fetchRangeOfId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Workorders.WORKORDERS.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workorders> fetchById(Integer... values) {
        return fetch(Workorders.WORKORDERS.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.savagelearning.machete.core.tables.pojos.Workorders fetchOneById(Integer value) {
        return fetchOne(Workorders.WORKORDERS.ID, value);
    }

    /**
     * Fetch records that have <code>EmployerID BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workorders> fetchRangeOfEmployerid(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Workorders.WORKORDERS.EMPLOYERID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>EmployerID IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workorders> fetchByEmployerid(Integer... values) {
        return fetch(Workorders.WORKORDERS.EMPLOYERID, values);
    }

    /**
     * Fetch records that have <code>paperOrderNum BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workorders> fetchRangeOfPaperordernum(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Workorders.WORKORDERS.PAPERORDERNUM, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>paperOrderNum IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workorders> fetchByPaperordernum(Integer... values) {
        return fetch(Workorders.WORKORDERS.PAPERORDERNUM, values);
    }

    /**
     * Fetch records that have <code>waPseudoIDCounter BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workorders> fetchRangeOfWapseudoidcounter(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Workorders.WORKORDERS.WAPSEUDOIDCOUNTER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>waPseudoIDCounter IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workorders> fetchByWapseudoidcounter(Integer... values) {
        return fetch(Workorders.WORKORDERS.WAPSEUDOIDCOUNTER, values);
    }

    /**
     * Fetch records that have <code>contactName BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workorders> fetchRangeOfContactname(String lowerInclusive, String upperInclusive) {
        return fetchRange(Workorders.WORKORDERS.CONTACTNAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>contactName IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workorders> fetchByContactname(String... values) {
        return fetch(Workorders.WORKORDERS.CONTACTNAME, values);
    }

    /**
     * Fetch records that have <code>status BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workorders> fetchRangeOfStatus(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Workorders.WORKORDERS.STATUS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>status IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workorders> fetchByStatus(Integer... values) {
        return fetch(Workorders.WORKORDERS.STATUS, values);
    }

    /**
     * Fetch records that have <code>workSiteAddress1 BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workorders> fetchRangeOfWorksiteaddress1(String lowerInclusive, String upperInclusive) {
        return fetchRange(Workorders.WORKORDERS.WORKSITEADDRESS1, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>workSiteAddress1 IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workorders> fetchByWorksiteaddress1(String... values) {
        return fetch(Workorders.WORKORDERS.WORKSITEADDRESS1, values);
    }

    /**
     * Fetch records that have <code>workSiteAddress2 BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workorders> fetchRangeOfWorksiteaddress2(String lowerInclusive, String upperInclusive) {
        return fetchRange(Workorders.WORKORDERS.WORKSITEADDRESS2, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>workSiteAddress2 IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workorders> fetchByWorksiteaddress2(String... values) {
        return fetch(Workorders.WORKORDERS.WORKSITEADDRESS2, values);
    }

    /**
     * Fetch records that have <code>city BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workorders> fetchRangeOfCity(String lowerInclusive, String upperInclusive) {
        return fetchRange(Workorders.WORKORDERS.CITY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>city IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workorders> fetchByCity(String... values) {
        return fetch(Workorders.WORKORDERS.CITY, values);
    }

    /**
     * Fetch records that have <code>state BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workorders> fetchRangeOfState(String lowerInclusive, String upperInclusive) {
        return fetchRange(Workorders.WORKORDERS.STATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>state IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workorders> fetchByState(String... values) {
        return fetch(Workorders.WORKORDERS.STATE, values);
    }

    /**
     * Fetch records that have <code>phone BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workorders> fetchRangeOfPhone(String lowerInclusive, String upperInclusive) {
        return fetchRange(Workorders.WORKORDERS.PHONE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>phone IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workorders> fetchByPhone(String... values) {
        return fetch(Workorders.WORKORDERS.PHONE, values);
    }

    /**
     * Fetch records that have <code>zipcode BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workorders> fetchRangeOfZipcode(String lowerInclusive, String upperInclusive) {
        return fetchRange(Workorders.WORKORDERS.ZIPCODE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>zipcode IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workorders> fetchByZipcode(String... values) {
        return fetch(Workorders.WORKORDERS.ZIPCODE, values);
    }

    /**
     * Fetch records that have <code>typeOfWorkID BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workorders> fetchRangeOfTypeofworkid(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Workorders.WORKORDERS.TYPEOFWORKID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>typeOfWorkID IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workorders> fetchByTypeofworkid(Integer... values) {
        return fetch(Workorders.WORKORDERS.TYPEOFWORKID, values);
    }

    /**
     * Fetch records that have <code>englishRequired BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workorders> fetchRangeOfEnglishrequired(String lowerInclusive, String upperInclusive) {
        return fetchRange(Workorders.WORKORDERS.ENGLISHREQUIRED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>englishRequired IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workorders> fetchByEnglishrequired(String... values) {
        return fetch(Workorders.WORKORDERS.ENGLISHREQUIRED, values);
    }

    /**
     * Fetch records that have <code>englishRequiredNote BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workorders> fetchRangeOfEnglishrequirednote(String lowerInclusive, String upperInclusive) {
        return fetchRange(Workorders.WORKORDERS.ENGLISHREQUIREDNOTE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>englishRequiredNote IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workorders> fetchByEnglishrequirednote(String... values) {
        return fetch(Workorders.WORKORDERS.ENGLISHREQUIREDNOTE, values);
    }

    /**
     * Fetch records that have <code>lunchSupplied BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workorders> fetchRangeOfLunchsupplied(String lowerInclusive, String upperInclusive) {
        return fetchRange(Workorders.WORKORDERS.LUNCHSUPPLIED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>lunchSupplied IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workorders> fetchByLunchsupplied(String... values) {
        return fetch(Workorders.WORKORDERS.LUNCHSUPPLIED, values);
    }

    /**
     * Fetch records that have <code>permanentPlacement BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workorders> fetchRangeOfPermanentplacement(String lowerInclusive, String upperInclusive) {
        return fetchRange(Workorders.WORKORDERS.PERMANENTPLACEMENT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>permanentPlacement IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workorders> fetchByPermanentplacement(String... values) {
        return fetch(Workorders.WORKORDERS.PERMANENTPLACEMENT, values);
    }

    /**
     * Fetch records that have <code>transportMethodID BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workorders> fetchRangeOfTransportmethodid(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Workorders.WORKORDERS.TRANSPORTMETHODID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>transportMethodID IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workorders> fetchByTransportmethodid(Integer... values) {
        return fetch(Workorders.WORKORDERS.TRANSPORTMETHODID, values);
    }

    /**
     * Fetch records that have <code>transportFee BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workorders> fetchRangeOfTransportfee(Double lowerInclusive, Double upperInclusive) {
        return fetchRange(Workorders.WORKORDERS.TRANSPORTFEE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>transportFee IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workorders> fetchByTransportfee(Double... values) {
        return fetch(Workorders.WORKORDERS.TRANSPORTFEE, values);
    }

    /**
     * Fetch records that have <code>transportFeeExtra BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workorders> fetchRangeOfTransportfeeextra(Double lowerInclusive, Double upperInclusive) {
        return fetchRange(Workorders.WORKORDERS.TRANSPORTFEEEXTRA, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>transportFeeExtra IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workorders> fetchByTransportfeeextra(Double... values) {
        return fetch(Workorders.WORKORDERS.TRANSPORTFEEEXTRA, values);
    }

    /**
     * Fetch records that have <code>description BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workorders> fetchRangeOfDescription(String lowerInclusive, String upperInclusive) {
        return fetchRange(Workorders.WORKORDERS.DESCRIPTION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>description IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workorders> fetchByDescription(String... values) {
        return fetch(Workorders.WORKORDERS.DESCRIPTION, values);
    }

    /**
     * Fetch records that have <code>dateTimeofWork BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workorders> fetchRangeOfDatetimeofwork(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Workorders.WORKORDERS.DATETIMEOFWORK, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>dateTimeofWork IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workorders> fetchByDatetimeofwork(LocalDateTime... values) {
        return fetch(Workorders.WORKORDERS.DATETIMEOFWORK, values);
    }

    /**
     * Fetch records that have <code>timeFlexible BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workorders> fetchRangeOfTimeflexible(String lowerInclusive, String upperInclusive) {
        return fetchRange(Workorders.WORKORDERS.TIMEFLEXIBLE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>timeFlexible IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workorders> fetchByTimeflexible(String... values) {
        return fetch(Workorders.WORKORDERS.TIMEFLEXIBLE, values);
    }

    /**
     * Fetch records that have <code>datecreated BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workorders> fetchRangeOfDatecreated(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Workorders.WORKORDERS.DATECREATED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>datecreated IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workorders> fetchByDatecreated(LocalDateTime... values) {
        return fetch(Workorders.WORKORDERS.DATECREATED, values);
    }

    /**
     * Fetch records that have <code>dateupdated BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workorders> fetchRangeOfDateupdated(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Workorders.WORKORDERS.DATEUPDATED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>dateupdated IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workorders> fetchByDateupdated(LocalDateTime... values) {
        return fetch(Workorders.WORKORDERS.DATEUPDATED, values);
    }

    /**
     * Fetch records that have <code>Createdby BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workorders> fetchRangeOfCreatedby(String lowerInclusive, String upperInclusive) {
        return fetchRange(Workorders.WORKORDERS.CREATEDBY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>Createdby IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workorders> fetchByCreatedby(String... values) {
        return fetch(Workorders.WORKORDERS.CREATEDBY, values);
    }

    /**
     * Fetch records that have <code>Updatedby BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workorders> fetchRangeOfUpdatedby(String lowerInclusive, String upperInclusive) {
        return fetchRange(Workorders.WORKORDERS.UPDATEDBY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>Updatedby IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workorders> fetchByUpdatedby(String... values) {
        return fetch(Workorders.WORKORDERS.UPDATEDBY, values);
    }

    /**
     * Fetch records that have <code>onlineSource BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workorders> fetchRangeOfOnlinesource(String lowerInclusive, String upperInclusive) {
        return fetchRange(Workorders.WORKORDERS.ONLINESOURCE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>onlineSource IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workorders> fetchByOnlinesource(String... values) {
        return fetch(Workorders.WORKORDERS.ONLINESOURCE, values);
    }

    /**
     * Fetch records that have <code>transportTransactType BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workorders> fetchRangeOfTransporttransacttype(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Workorders.WORKORDERS.TRANSPORTTRANSACTTYPE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>transportTransactType IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workorders> fetchByTransporttransacttype(Integer... values) {
        return fetch(Workorders.WORKORDERS.TRANSPORTTRANSACTTYPE, values);
    }

    /**
     * Fetch records that have <code>transportTransactID BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workorders> fetchRangeOfTransporttransactid(String lowerInclusive, String upperInclusive) {
        return fetchRange(Workorders.WORKORDERS.TRANSPORTTRANSACTID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>transportTransactID IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workorders> fetchByTransporttransactid(String... values) {
        return fetch(Workorders.WORKORDERS.TRANSPORTTRANSACTID, values);
    }

    /**
     * Fetch records that have <code>additionalNotes BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workorders> fetchRangeOfAdditionalnotes(String lowerInclusive, String upperInclusive) {
        return fetchRange(Workorders.WORKORDERS.ADDITIONALNOTES, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>additionalNotes IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workorders> fetchByAdditionalnotes(String... values) {
        return fetch(Workorders.WORKORDERS.ADDITIONALNOTES, values);
    }

    /**
     * Fetch records that have <code>disclosureAgreement BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workorders> fetchRangeOfDisclosureagreement(String lowerInclusive, String upperInclusive) {
        return fetchRange(Workorders.WORKORDERS.DISCLOSUREAGREEMENT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>disclosureAgreement IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workorders> fetchByDisclosureagreement(String... values) {
        return fetch(Workorders.WORKORDERS.DISCLOSUREAGREEMENT, values);
    }

    /**
     * Fetch records that have <code>statusEN BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workorders> fetchRangeOfStatusen(String lowerInclusive, String upperInclusive) {
        return fetchRange(Workorders.WORKORDERS.STATUSEN, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>statusEN IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workorders> fetchByStatusen(String... values) {
        return fetch(Workorders.WORKORDERS.STATUSEN, values);
    }

    /**
     * Fetch records that have <code>statusES BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workorders> fetchRangeOfStatuses(String lowerInclusive, String upperInclusive) {
        return fetchRange(Workorders.WORKORDERS.STATUSES, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>statusES IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workorders> fetchByStatuses(String... values) {
        return fetch(Workorders.WORKORDERS.STATUSES, values);
    }

    /**
     * Fetch records that have <code>transportMethodEN BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workorders> fetchRangeOfTransportmethoden(String lowerInclusive, String upperInclusive) {
        return fetchRange(Workorders.WORKORDERS.TRANSPORTMETHODEN, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>transportMethodEN IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workorders> fetchByTransportmethoden(String... values) {
        return fetch(Workorders.WORKORDERS.TRANSPORTMETHODEN, values);
    }

    /**
     * Fetch records that have <code>transportMethodES BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workorders> fetchRangeOfTransportmethodes(String lowerInclusive, String upperInclusive) {
        return fetchRange(Workorders.WORKORDERS.TRANSPORTMETHODES, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>transportMethodES IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workorders> fetchByTransportmethodes(String... values) {
        return fetch(Workorders.WORKORDERS.TRANSPORTMETHODES, values);
    }

    /**
     * Fetch records that have <code>timeZoneOffset BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workorders> fetchRangeOfTimezoneoffset(Double lowerInclusive, Double upperInclusive) {
        return fetchRange(Workorders.WORKORDERS.TIMEZONEOFFSET, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>timeZoneOffset IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workorders> fetchByTimezoneoffset(Double... values) {
        return fetch(Workorders.WORKORDERS.TIMEZONEOFFSET, values);
    }

    /**
     * Fetch records that have <code>ppFee BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workorders> fetchRangeOfPpfee(Double lowerInclusive, Double upperInclusive) {
        return fetchRange(Workorders.WORKORDERS.PPFEE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>ppFee IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workorders> fetchByPpfee(Double... values) {
        return fetch(Workorders.WORKORDERS.PPFEE, values);
    }

    /**
     * Fetch records that have <code>ppResponse BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workorders> fetchRangeOfPpresponse(String lowerInclusive, String upperInclusive) {
        return fetchRange(Workorders.WORKORDERS.PPRESPONSE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>ppResponse IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workorders> fetchByPpresponse(String... values) {
        return fetch(Workorders.WORKORDERS.PPRESPONSE, values);
    }

    /**
     * Fetch records that have <code>ppPaymentToken BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workorders> fetchRangeOfPppaymenttoken(String lowerInclusive, String upperInclusive) {
        return fetchRange(Workorders.WORKORDERS.PPPAYMENTTOKEN, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>ppPaymentToken IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workorders> fetchByPppaymenttoken(String... values) {
        return fetch(Workorders.WORKORDERS.PPPAYMENTTOKEN, values);
    }

    /**
     * Fetch records that have <code>ppPaymentID BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workorders> fetchRangeOfPppaymentid(String lowerInclusive, String upperInclusive) {
        return fetchRange(Workorders.WORKORDERS.PPPAYMENTID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>ppPaymentID IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workorders> fetchByPppaymentid(String... values) {
        return fetch(Workorders.WORKORDERS.PPPAYMENTID, values);
    }

    /**
     * Fetch records that have <code>ppPayerID BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workorders> fetchRangeOfPppayerid(String lowerInclusive, String upperInclusive) {
        return fetchRange(Workorders.WORKORDERS.PPPAYERID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>ppPayerID IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workorders> fetchByPppayerid(String... values) {
        return fetch(Workorders.WORKORDERS.PPPAYERID, values);
    }

    /**
     * Fetch records that have <code>ppState BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workorders> fetchRangeOfPpstate(String lowerInclusive, String upperInclusive) {
        return fetchRange(Workorders.WORKORDERS.PPSTATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>ppState IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workorders> fetchByPpstate(String... values) {
        return fetch(Workorders.WORKORDERS.PPSTATE, values);
    }

    /**
     * Fetch records that have <code>transportProviderID BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workorders> fetchRangeOfTransportproviderid(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Workorders.WORKORDERS.TRANSPORTPROVIDERID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>transportProviderID IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workorders> fetchByTransportproviderid(Integer... values) {
        return fetch(Workorders.WORKORDERS.TRANSPORTPROVIDERID, values);
    }
}
