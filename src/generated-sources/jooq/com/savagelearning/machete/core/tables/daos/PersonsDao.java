/*
 * This file is generated by jOOQ.
 */
package com.savagelearning.machete.core.tables.daos;


import com.savagelearning.machete.core.tables.Persons;
import com.savagelearning.machete.core.tables.records.PersonsRecord;

import java.time.LocalDateTime;
import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PersonsDao extends DAOImpl<PersonsRecord, com.savagelearning.machete.core.tables.pojos.Persons, Integer> {

    /**
     * Create a new PersonsDao without any configuration
     */
    public PersonsDao() {
        super(Persons.PERSONS, com.savagelearning.machete.core.tables.pojos.Persons.class);
    }

    /**
     * Create a new PersonsDao with an attached configuration
     */
    public PersonsDao(Configuration configuration) {
        super(Persons.PERSONS, com.savagelearning.machete.core.tables.pojos.Persons.class, configuration);
    }

    @Override
    public Integer getId(com.savagelearning.machete.core.tables.pojos.Persons object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Persons> fetchRangeOfId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Persons.PERSONS.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Persons> fetchById(Integer... values) {
        return fetch(Persons.PERSONS.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.savagelearning.machete.core.tables.pojos.Persons fetchOneById(Integer value) {
        return fetchOne(Persons.PERSONS.ID, value);
    }

    /**
     * Fetch records that have <code>active BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Persons> fetchRangeOfActive(String lowerInclusive, String upperInclusive) {
        return fetchRange(Persons.PERSONS.ACTIVE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>active IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Persons> fetchByActive(String... values) {
        return fetch(Persons.PERSONS.ACTIVE, values);
    }

    /**
     * Fetch records that have <code>firstname1 BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Persons> fetchRangeOfFirstname1(String lowerInclusive, String upperInclusive) {
        return fetchRange(Persons.PERSONS.FIRSTNAME1, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>firstname1 IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Persons> fetchByFirstname1(String... values) {
        return fetch(Persons.PERSONS.FIRSTNAME1, values);
    }

    /**
     * Fetch records that have <code>firstname2 BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Persons> fetchRangeOfFirstname2(String lowerInclusive, String upperInclusive) {
        return fetchRange(Persons.PERSONS.FIRSTNAME2, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>firstname2 IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Persons> fetchByFirstname2(String... values) {
        return fetch(Persons.PERSONS.FIRSTNAME2, values);
    }

    /**
     * Fetch records that have <code>lastname1 BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Persons> fetchRangeOfLastname1(String lowerInclusive, String upperInclusive) {
        return fetchRange(Persons.PERSONS.LASTNAME1, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>lastname1 IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Persons> fetchByLastname1(String... values) {
        return fetch(Persons.PERSONS.LASTNAME1, values);
    }

    /**
     * Fetch records that have <code>lastname2 BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Persons> fetchRangeOfLastname2(String lowerInclusive, String upperInclusive) {
        return fetchRange(Persons.PERSONS.LASTNAME2, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>lastname2 IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Persons> fetchByLastname2(String... values) {
        return fetch(Persons.PERSONS.LASTNAME2, values);
    }

    /**
     * Fetch records that have <code>address1 BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Persons> fetchRangeOfAddress1(String lowerInclusive, String upperInclusive) {
        return fetchRange(Persons.PERSONS.ADDRESS1, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>address1 IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Persons> fetchByAddress1(String... values) {
        return fetch(Persons.PERSONS.ADDRESS1, values);
    }

    /**
     * Fetch records that have <code>address2 BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Persons> fetchRangeOfAddress2(String lowerInclusive, String upperInclusive) {
        return fetchRange(Persons.PERSONS.ADDRESS2, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>address2 IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Persons> fetchByAddress2(String... values) {
        return fetch(Persons.PERSONS.ADDRESS2, values);
    }

    /**
     * Fetch records that have <code>city BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Persons> fetchRangeOfCity(String lowerInclusive, String upperInclusive) {
        return fetchRange(Persons.PERSONS.CITY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>city IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Persons> fetchByCity(String... values) {
        return fetch(Persons.PERSONS.CITY, values);
    }

    /**
     * Fetch records that have <code>state BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Persons> fetchRangeOfState(String lowerInclusive, String upperInclusive) {
        return fetchRange(Persons.PERSONS.STATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>state IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Persons> fetchByState(String... values) {
        return fetch(Persons.PERSONS.STATE, values);
    }

    /**
     * Fetch records that have <code>zipcode BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Persons> fetchRangeOfZipcode(String lowerInclusive, String upperInclusive) {
        return fetchRange(Persons.PERSONS.ZIPCODE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>zipcode IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Persons> fetchByZipcode(String... values) {
        return fetch(Persons.PERSONS.ZIPCODE, values);
    }

    /**
     * Fetch records that have <code>phone BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Persons> fetchRangeOfPhone(String lowerInclusive, String upperInclusive) {
        return fetchRange(Persons.PERSONS.PHONE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>phone IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Persons> fetchByPhone(String... values) {
        return fetch(Persons.PERSONS.PHONE, values);
    }

    /**
     * Fetch records that have <code>gender BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Persons> fetchRangeOfGender(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Persons.PERSONS.GENDER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>gender IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Persons> fetchByGender(Integer... values) {
        return fetch(Persons.PERSONS.GENDER, values);
    }

    /**
     * Fetch records that have <code>genderother BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Persons> fetchRangeOfGenderother(String lowerInclusive, String upperInclusive) {
        return fetchRange(Persons.PERSONS.GENDEROTHER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>genderother IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Persons> fetchByGenderother(String... values) {
        return fetch(Persons.PERSONS.GENDEROTHER, values);
    }

    /**
     * Fetch records that have <code>datecreated BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Persons> fetchRangeOfDatecreated(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Persons.PERSONS.DATECREATED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>datecreated IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Persons> fetchByDatecreated(LocalDateTime... values) {
        return fetch(Persons.PERSONS.DATECREATED, values);
    }

    /**
     * Fetch records that have <code>dateupdated BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Persons> fetchRangeOfDateupdated(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Persons.PERSONS.DATEUPDATED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>dateupdated IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Persons> fetchByDateupdated(LocalDateTime... values) {
        return fetch(Persons.PERSONS.DATEUPDATED, values);
    }

    /**
     * Fetch records that have <code>Createdby BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Persons> fetchRangeOfCreatedby(String lowerInclusive, String upperInclusive) {
        return fetchRange(Persons.PERSONS.CREATEDBY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>Createdby IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Persons> fetchByCreatedby(String... values) {
        return fetch(Persons.PERSONS.CREATEDBY, values);
    }

    /**
     * Fetch records that have <code>Updatedby BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Persons> fetchRangeOfUpdatedby(String lowerInclusive, String upperInclusive) {
        return fetchRange(Persons.PERSONS.UPDATEDBY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>Updatedby IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Persons> fetchByUpdatedby(String... values) {
        return fetch(Persons.PERSONS.UPDATEDBY, values);
    }

    /**
     * Fetch records that have <code>nickname BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Persons> fetchRangeOfNickname(String lowerInclusive, String upperInclusive) {
        return fetchRange(Persons.PERSONS.NICKNAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>nickname IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Persons> fetchByNickname(String... values) {
        return fetch(Persons.PERSONS.NICKNAME, values);
    }

    /**
     * Fetch records that have <code>cellphone BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Persons> fetchRangeOfCellphone(String lowerInclusive, String upperInclusive) {
        return fetchRange(Persons.PERSONS.CELLPHONE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>cellphone IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Persons> fetchByCellphone(String... values) {
        return fetch(Persons.PERSONS.CELLPHONE, values);
    }

    /**
     * Fetch records that have <code>email BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Persons> fetchRangeOfEmail(String lowerInclusive, String upperInclusive) {
        return fetchRange(Persons.PERSONS.EMAIL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>email IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Persons> fetchByEmail(String... values) {
        return fetch(Persons.PERSONS.EMAIL, values);
    }

    /**
     * Fetch records that have <code>facebook BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Persons> fetchRangeOfFacebook(String lowerInclusive, String upperInclusive) {
        return fetchRange(Persons.PERSONS.FACEBOOK, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>facebook IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Persons> fetchByFacebook(String... values) {
        return fetch(Persons.PERSONS.FACEBOOK, values);
    }

    /**
     * Fetch records that have <code>fullName BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Persons> fetchRangeOfFullname(String lowerInclusive, String upperInclusive) {
        return fetchRange(Persons.PERSONS.FULLNAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>fullName IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Persons> fetchByFullname(String... values) {
        return fetch(Persons.PERSONS.FULLNAME, values);
    }
}
