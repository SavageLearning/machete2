/*
 * This file is generated by jOOQ.
 */
package com.savagelearning.machete.core.tables.daos;


import com.savagelearning.machete.core.tables.Joineventimage;
import com.savagelearning.machete.core.tables.records.JoineventimageRecord;

import java.time.LocalDateTime;
import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JoineventimageDao extends DAOImpl<JoineventimageRecord, com.savagelearning.machete.core.tables.pojos.Joineventimage, Integer> {

    /**
     * Create a new JoineventimageDao without any configuration
     */
    public JoineventimageDao() {
        super(Joineventimage.JOINEVENTIMAGE, com.savagelearning.machete.core.tables.pojos.Joineventimage.class);
    }

    /**
     * Create a new JoineventimageDao with an attached configuration
     */
    public JoineventimageDao(Configuration configuration) {
        super(Joineventimage.JOINEVENTIMAGE, com.savagelearning.machete.core.tables.pojos.Joineventimage.class, configuration);
    }

    @Override
    public Integer getId(com.savagelearning.machete.core.tables.pojos.Joineventimage object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Joineventimage> fetchRangeOfId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Joineventimage.JOINEVENTIMAGE.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Joineventimage> fetchById(Integer... values) {
        return fetch(Joineventimage.JOINEVENTIMAGE.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.savagelearning.machete.core.tables.pojos.Joineventimage fetchOneById(Integer value) {
        return fetchOne(Joineventimage.JOINEVENTIMAGE.ID, value);
    }

    /**
     * Fetch records that have <code>datecreated BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Joineventimage> fetchRangeOfDatecreated(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Joineventimage.JOINEVENTIMAGE.DATECREATED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>datecreated IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Joineventimage> fetchByDatecreated(LocalDateTime... values) {
        return fetch(Joineventimage.JOINEVENTIMAGE.DATECREATED, values);
    }

    /**
     * Fetch records that have <code>dateupdated BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Joineventimage> fetchRangeOfDateupdated(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Joineventimage.JOINEVENTIMAGE.DATEUPDATED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>dateupdated IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Joineventimage> fetchByDateupdated(LocalDateTime... values) {
        return fetch(Joineventimage.JOINEVENTIMAGE.DATEUPDATED, values);
    }

    /**
     * Fetch records that have <code>Createdby BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Joineventimage> fetchRangeOfCreatedby(String lowerInclusive, String upperInclusive) {
        return fetchRange(Joineventimage.JOINEVENTIMAGE.CREATEDBY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>Createdby IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Joineventimage> fetchByCreatedby(String... values) {
        return fetch(Joineventimage.JOINEVENTIMAGE.CREATEDBY, values);
    }

    /**
     * Fetch records that have <code>Updatedby BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Joineventimage> fetchRangeOfUpdatedby(String lowerInclusive, String upperInclusive) {
        return fetchRange(Joineventimage.JOINEVENTIMAGE.UPDATEDBY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>Updatedby IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Joineventimage> fetchByUpdatedby(String... values) {
        return fetch(Joineventimage.JOINEVENTIMAGE.UPDATEDBY, values);
    }

    /**
     * Fetch records that have <code>EventID BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Joineventimage> fetchRangeOfEventid(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Joineventimage.JOINEVENTIMAGE.EVENTID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>EventID IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Joineventimage> fetchByEventid(Integer... values) {
        return fetch(Joineventimage.JOINEVENTIMAGE.EVENTID, values);
    }

    /**
     * Fetch records that have <code>ImageID BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Joineventimage> fetchRangeOfImageid(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Joineventimage.JOINEVENTIMAGE.IMAGEID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>ImageID IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Joineventimage> fetchByImageid(Integer... values) {
        return fetch(Joineventimage.JOINEVENTIMAGE.IMAGEID, values);
    }
}
