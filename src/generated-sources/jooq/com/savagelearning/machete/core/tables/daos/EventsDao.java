/*
 * This file is generated by jOOQ.
 */
package com.savagelearning.machete.core.tables.daos;


import com.savagelearning.machete.core.tables.Events;
import com.savagelearning.machete.core.tables.records.EventsRecord;

import java.time.LocalDateTime;
import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EventsDao extends DAOImpl<EventsRecord, com.savagelearning.machete.core.tables.pojos.Events, Integer> {

    /**
     * Create a new EventsDao without any configuration
     */
    public EventsDao() {
        super(Events.EVENTS, com.savagelearning.machete.core.tables.pojos.Events.class);
    }

    /**
     * Create a new EventsDao with an attached configuration
     */
    public EventsDao(Configuration configuration) {
        super(Events.EVENTS, com.savagelearning.machete.core.tables.pojos.Events.class, configuration);
    }

    @Override
    public Integer getId(com.savagelearning.machete.core.tables.pojos.Events object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Events> fetchRangeOfId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Events.EVENTS.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Events> fetchById(Integer... values) {
        return fetch(Events.EVENTS.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.savagelearning.machete.core.tables.pojos.Events fetchOneById(Integer value) {
        return fetchOne(Events.EVENTS.ID, value);
    }

    /**
     * Fetch records that have <code>PersonID BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Events> fetchRangeOfPersonid(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Events.EVENTS.PERSONID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>PersonID IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Events> fetchByPersonid(Integer... values) {
        return fetch(Events.EVENTS.PERSONID, values);
    }

    /**
     * Fetch records that have <code>eventType BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Events> fetchRangeOfEventtype(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Events.EVENTS.EVENTTYPE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>eventType IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Events> fetchByEventtype(Integer... values) {
        return fetch(Events.EVENTS.EVENTTYPE, values);
    }

    /**
     * Fetch records that have <code>dateFrom BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Events> fetchRangeOfDatefrom(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Events.EVENTS.DATEFROM, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>dateFrom IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Events> fetchByDatefrom(LocalDateTime... values) {
        return fetch(Events.EVENTS.DATEFROM, values);
    }

    /**
     * Fetch records that have <code>dateTo BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Events> fetchRangeOfDateto(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Events.EVENTS.DATETO, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>dateTo IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Events> fetchByDateto(LocalDateTime... values) {
        return fetch(Events.EVENTS.DATETO, values);
    }

    /**
     * Fetch records that have <code>notes BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Events> fetchRangeOfNotes(String lowerInclusive, String upperInclusive) {
        return fetchRange(Events.EVENTS.NOTES, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>notes IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Events> fetchByNotes(String... values) {
        return fetch(Events.EVENTS.NOTES, values);
    }

    /**
     * Fetch records that have <code>datecreated BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Events> fetchRangeOfDatecreated(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Events.EVENTS.DATECREATED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>datecreated IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Events> fetchByDatecreated(LocalDateTime... values) {
        return fetch(Events.EVENTS.DATECREATED, values);
    }

    /**
     * Fetch records that have <code>dateupdated BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Events> fetchRangeOfDateupdated(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Events.EVENTS.DATEUPDATED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>dateupdated IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Events> fetchByDateupdated(LocalDateTime... values) {
        return fetch(Events.EVENTS.DATEUPDATED, values);
    }

    /**
     * Fetch records that have <code>Createdby BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Events> fetchRangeOfCreatedby(String lowerInclusive, String upperInclusive) {
        return fetchRange(Events.EVENTS.CREATEDBY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>Createdby IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Events> fetchByCreatedby(String... values) {
        return fetch(Events.EVENTS.CREATEDBY, values);
    }

    /**
     * Fetch records that have <code>Updatedby BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Events> fetchRangeOfUpdatedby(String lowerInclusive, String upperInclusive) {
        return fetchRange(Events.EVENTS.UPDATEDBY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>Updatedby IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Events> fetchByUpdatedby(String... values) {
        return fetch(Events.EVENTS.UPDATEDBY, values);
    }

    /**
     * Fetch records that have <code>eventTypeEN BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Events> fetchRangeOfEventtypeen(String lowerInclusive, String upperInclusive) {
        return fetchRange(Events.EVENTS.EVENTTYPEEN, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>eventTypeEN IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Events> fetchByEventtypeen(String... values) {
        return fetch(Events.EVENTS.EVENTTYPEEN, values);
    }

    /**
     * Fetch records that have <code>eventTypeES BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Events> fetchRangeOfEventtypees(String lowerInclusive, String upperInclusive) {
        return fetchRange(Events.EVENTS.EVENTTYPEES, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>eventTypeES IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Events> fetchByEventtypees(String... values) {
        return fetch(Events.EVENTS.EVENTTYPEES, values);
    }
}
