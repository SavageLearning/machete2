/*
 * This file is generated by jOOQ.
 */
package com.savagelearning.machete.core.tables;


import com.savagelearning.machete.core.Keys;
import com.savagelearning.machete.core.Public;
import com.savagelearning.machete.core.tables.records.ActivitysigninsRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row10;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Activitysignins extends TableImpl<ActivitysigninsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.ActivitySignins</code>
     */
    public static final Activitysignins ACTIVITYSIGNINS = new Activitysignins();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ActivitysigninsRecord> getRecordType() {
        return ActivitysigninsRecord.class;
    }

    /**
     * The column <code>public.ActivitySignins.id</code>.
     */
    public final TableField<ActivitysigninsRecord, Integer> ID = createField(DSL.name("id"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.field("nextval('\"ActivitySignins_id_seq\"'::regclass)", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.ActivitySignins.ActivityID</code>.
     */
    public final TableField<ActivitysigninsRecord, Integer> ACTIVITYID = createField(DSL.name("ActivityID"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.ActivitySignins.dwccardnum</code>.
     */
    public final TableField<ActivitysigninsRecord, Integer> DWCCARDNUM = createField(DSL.name("dwccardnum"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.ActivitySignins.memberStatus</code>.
     */
    public final TableField<ActivitysigninsRecord, Integer> MEMBERSTATUS = createField(DSL.name("memberStatus"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.ActivitySignins.dateforsignin</code>.
     */
    public final TableField<ActivitysigninsRecord, LocalDateTime> DATEFORSIGNIN = createField(DSL.name("dateforsignin"), SQLDataType.LOCALDATETIME(6).nullable(false), this, "");

    /**
     * The column <code>public.ActivitySignins.datecreated</code>.
     */
    public final TableField<ActivitysigninsRecord, LocalDateTime> DATECREATED = createField(DSL.name("datecreated"), SQLDataType.LOCALDATETIME(6).nullable(false), this, "");

    /**
     * The column <code>public.ActivitySignins.dateupdated</code>.
     */
    public final TableField<ActivitysigninsRecord, LocalDateTime> DATEUPDATED = createField(DSL.name("dateupdated"), SQLDataType.LOCALDATETIME(6).nullable(false), this, "");

    /**
     * The column <code>public.ActivitySignins.Createdby</code>.
     */
    public final TableField<ActivitysigninsRecord, String> CREATEDBY = createField(DSL.name("Createdby"), SQLDataType.VARCHAR(30), this, "");

    /**
     * The column <code>public.ActivitySignins.Updatedby</code>.
     */
    public final TableField<ActivitysigninsRecord, String> UPDATEDBY = createField(DSL.name("Updatedby"), SQLDataType.VARCHAR(30), this, "");

    /**
     * The column <code>public.ActivitySignins.personID</code>.
     */
    public final TableField<ActivitysigninsRecord, Integer> PERSONID = createField(DSL.name("personID"), SQLDataType.INTEGER, this, "");

    private Activitysignins(Name alias, Table<ActivitysigninsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Activitysignins(Name alias, Table<ActivitysigninsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>public.ActivitySignins</code> table reference
     */
    public Activitysignins(String alias) {
        this(DSL.name(alias), ACTIVITYSIGNINS);
    }

    /**
     * Create an aliased <code>public.ActivitySignins</code> table reference
     */
    public Activitysignins(Name alias) {
        this(alias, ACTIVITYSIGNINS);
    }

    /**
     * Create a <code>public.ActivitySignins</code> table reference
     */
    public Activitysignins() {
        this(DSL.name("ActivitySignins"), null);
    }

    public <O extends Record> Activitysignins(Table<O> child, ForeignKey<O, ActivitysigninsRecord> key) {
        super(child, key, ACTIVITYSIGNINS);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public UniqueKey<ActivitysigninsRecord> getPrimaryKey() {
        return Keys.PK_ACTIVITYSIGNINS;
    }

    @Override
    public List<UniqueKey<ActivitysigninsRecord>> getKeys() {
        return Arrays.<UniqueKey<ActivitysigninsRecord>>asList(Keys.PK_ACTIVITYSIGNINS);
    }

    @Override
    public List<ForeignKey<ActivitysigninsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ActivitysigninsRecord, ?>>asList(Keys.ACTIVITYSIGNINS__FK_ACTIVITYSIGNINS_ACTIVITIES_ACTIVITYID, Keys.ACTIVITYSIGNINS__FK_ACTIVITYSIGNINS_PERSONS_PERSONID);
    }

    public Activities activities() {
        return new Activities(this, Keys.ACTIVITYSIGNINS__FK_ACTIVITYSIGNINS_ACTIVITIES_ACTIVITYID);
    }

    public Persons persons() {
        return new Persons(this, Keys.ACTIVITYSIGNINS__FK_ACTIVITYSIGNINS_PERSONS_PERSONID);
    }

    @Override
    public Activitysignins as(String alias) {
        return new Activitysignins(DSL.name(alias), this);
    }

    @Override
    public Activitysignins as(Name alias) {
        return new Activitysignins(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Activitysignins rename(String name) {
        return new Activitysignins(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Activitysignins rename(Name name) {
        return new Activitysignins(name, null);
    }

    // -------------------------------------------------------------------------
    // Row10 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row10<Integer, Integer, Integer, Integer, LocalDateTime, LocalDateTime, LocalDateTime, String, String, Integer> fieldsRow() {
        return (Row10) super.fieldsRow();
    }
}
