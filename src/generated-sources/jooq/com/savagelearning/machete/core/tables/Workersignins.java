/*
 * This file is generated by jOOQ.
 */
package com.savagelearning.machete.core.tables;


import com.savagelearning.machete.core.Indexes;
import com.savagelearning.machete.core.Keys;
import com.savagelearning.machete.core.Public;
import com.savagelearning.machete.core.tables.records.WorkersigninsRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row13;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Workersignins extends TableImpl<WorkersigninsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.WorkerSignins</code>
     */
    public static final Workersignins WORKERSIGNINS = new Workersignins();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<WorkersigninsRecord> getRecordType() {
        return WorkersigninsRecord.class;
    }

    /**
     * The column <code>public.WorkerSignins.id</code>.
     */
    public final TableField<WorkersigninsRecord, Integer> ID = createField(DSL.name("id"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.field("nextval('\"WorkerSignins_id_seq\"'::regclass)", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.WorkerSignins.dwccardnum</code>.
     */
    public final TableField<WorkersigninsRecord, Integer> DWCCARDNUM = createField(DSL.name("dwccardnum"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.WorkerSignins.WorkerID</code>.
     */
    public final TableField<WorkersigninsRecord, Integer> WORKERID = createField(DSL.name("WorkerID"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.WorkerSignins.WorkAssignmentID</code>.
     */
    public final TableField<WorkersigninsRecord, Integer> WORKASSIGNMENTID = createField(DSL.name("WorkAssignmentID"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.WorkerSignins.dateforsignin</code>.
     */
    public final TableField<WorkersigninsRecord, LocalDateTime> DATEFORSIGNIN = createField(DSL.name("dateforsignin"), SQLDataType.LOCALDATETIME(6).nullable(false), this, "");

    /**
     * The column <code>public.WorkerSignins.lottery_timestamp</code>.
     */
    public final TableField<WorkersigninsRecord, LocalDateTime> LOTTERY_TIMESTAMP = createField(DSL.name("lottery_timestamp"), SQLDataType.LOCALDATETIME(6), this, "");

    /**
     * The column <code>public.WorkerSignins.datecreated</code>.
     */
    public final TableField<WorkersigninsRecord, LocalDateTime> DATECREATED = createField(DSL.name("datecreated"), SQLDataType.LOCALDATETIME(6).nullable(false), this, "");

    /**
     * The column <code>public.WorkerSignins.dateupdated</code>.
     */
    public final TableField<WorkersigninsRecord, LocalDateTime> DATEUPDATED = createField(DSL.name("dateupdated"), SQLDataType.LOCALDATETIME(6).nullable(false), this, "");

    /**
     * The column <code>public.WorkerSignins.Createdby</code>.
     */
    public final TableField<WorkersigninsRecord, String> CREATEDBY = createField(DSL.name("Createdby"), SQLDataType.VARCHAR(30), this, "");

    /**
     * The column <code>public.WorkerSignins.Updatedby</code>.
     */
    public final TableField<WorkersigninsRecord, String> UPDATEDBY = createField(DSL.name("Updatedby"), SQLDataType.VARCHAR(30), this, "");

    /**
     * The column <code>public.WorkerSignins.memberStatus</code>.
     */
    public final TableField<WorkersigninsRecord, Integer> MEMBERSTATUS = createField(DSL.name("memberStatus"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.WorkerSignins.lottery_sequence</code>.
     */
    public final TableField<WorkersigninsRecord, Integer> LOTTERY_SEQUENCE = createField(DSL.name("lottery_sequence"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.WorkerSignins.timeZoneOffset</code>.
     */
    public final TableField<WorkersigninsRecord, Double> TIMEZONEOFFSET = createField(DSL.name("timeZoneOffset"), SQLDataType.DOUBLE.nullable(false).defaultValue(DSL.field("0", SQLDataType.DOUBLE)), this, "");

    private Workersignins(Name alias, Table<WorkersigninsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Workersignins(Name alias, Table<WorkersigninsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>public.WorkerSignins</code> table reference
     */
    public Workersignins(String alias) {
        this(DSL.name(alias), WORKERSIGNINS);
    }

    /**
     * Create an aliased <code>public.WorkerSignins</code> table reference
     */
    public Workersignins(Name alias) {
        this(alias, WORKERSIGNINS);
    }

    /**
     * Create a <code>public.WorkerSignins</code> table reference
     */
    public Workersignins() {
        this(DSL.name("WorkerSignins"), null);
    }

    public <O extends Record> Workersignins(Table<O> child, ForeignKey<O, WorkersigninsRecord> key) {
        super(child, key, WORKERSIGNINS);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.NCI_WI_WORKERSIGNINS_920345646A83399347A7);
    }

    @Override
    public UniqueKey<WorkersigninsRecord> getPrimaryKey() {
        return Keys.PK__WORKERSI__3214EC275CE53F05;
    }

    @Override
    public List<UniqueKey<WorkersigninsRecord>> getKeys() {
        return Arrays.<UniqueKey<WorkersigninsRecord>>asList(Keys.PK__WORKERSI__3214EC275CE53F05);
    }

    @Override
    public List<ForeignKey<WorkersigninsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<WorkersigninsRecord, ?>>asList(Keys.WORKERSIGNINS__WORKER_WORKERSIGNINS);
    }

    public Workers workers() {
        return new Workers(this, Keys.WORKERSIGNINS__WORKER_WORKERSIGNINS);
    }

    @Override
    public Workersignins as(String alias) {
        return new Workersignins(DSL.name(alias), this);
    }

    @Override
    public Workersignins as(Name alias) {
        return new Workersignins(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Workersignins rename(String name) {
        return new Workersignins(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Workersignins rename(Name name) {
        return new Workersignins(name, null);
    }

    // -------------------------------------------------------------------------
    // Row13 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row13<Integer, Integer, Integer, Integer, LocalDateTime, LocalDateTime, LocalDateTime, LocalDateTime, String, String, Integer, Integer, Double> fieldsRow() {
        return (Row13) super.fieldsRow();
    }
}
