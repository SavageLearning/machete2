/*
 * This file is generated by jOOQ.
 */
package com.savagelearning.machete.core.tables.records;


import com.savagelearning.machete.core.tables.Drivingdistances;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DrivingdistancesRecord extends UpdatableRecordImpl<DrivingdistancesRecord> implements Record3<Integer, Integer, Double> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.DrivingDistances.distancesID</code>.
     */
    public void setDistancesid(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.DrivingDistances.distancesID</code>.
     */
    public Integer getDistancesid() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.DrivingDistances.workOrderId</code>.
     */
    public void setWorkorderid(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.DrivingDistances.workOrderId</code>.
     */
    public Integer getWorkorderid() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.DrivingDistances.drivingDistanceInMiles</code>.
     */
    public void setDrivingdistanceinmiles(Double value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.DrivingDistances.drivingDistanceInMiles</code>.
     */
    public Double getDrivingdistanceinmiles() {
        return (Double) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, Integer, Double> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Integer, Integer, Double> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Drivingdistances.DRIVINGDISTANCES.DISTANCESID;
    }

    @Override
    public Field<Integer> field2() {
        return Drivingdistances.DRIVINGDISTANCES.WORKORDERID;
    }

    @Override
    public Field<Double> field3() {
        return Drivingdistances.DRIVINGDISTANCES.DRIVINGDISTANCEINMILES;
    }

    @Override
    public Integer component1() {
        return getDistancesid();
    }

    @Override
    public Integer component2() {
        return getWorkorderid();
    }

    @Override
    public Double component3() {
        return getDrivingdistanceinmiles();
    }

    @Override
    public Integer value1() {
        return getDistancesid();
    }

    @Override
    public Integer value2() {
        return getWorkorderid();
    }

    @Override
    public Double value3() {
        return getDrivingdistanceinmiles();
    }

    @Override
    public DrivingdistancesRecord value1(Integer value) {
        setDistancesid(value);
        return this;
    }

    @Override
    public DrivingdistancesRecord value2(Integer value) {
        setWorkorderid(value);
        return this;
    }

    @Override
    public DrivingdistancesRecord value3(Double value) {
        setDrivingdistanceinmiles(value);
        return this;
    }

    @Override
    public DrivingdistancesRecord values(Integer value1, Integer value2, Double value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DrivingdistancesRecord
     */
    public DrivingdistancesRecord() {
        super(Drivingdistances.DRIVINGDISTANCES);
    }

    /**
     * Create a detached, initialised DrivingdistancesRecord
     */
    public DrivingdistancesRecord(Integer distancesid, Integer workorderid, Double drivingdistanceinmiles) {
        super(Drivingdistances.DRIVINGDISTANCES);

        setDistancesid(distancesid);
        setWorkorderid(workorderid);
        setDrivingdistanceinmiles(drivingdistanceinmiles);
    }
}
