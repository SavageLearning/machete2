/*
 * This file is generated by jOOQ.
 */
package com.savagelearning.machete.core.tables.daos;


import com.savagelearning.machete.core.tables.Reportdefinitions;
import com.savagelearning.machete.core.tables.records.ReportdefinitionsRecord;

import java.time.LocalDateTime;
import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ReportdefinitionsDao extends DAOImpl<ReportdefinitionsRecord, com.savagelearning.machete.core.tables.pojos.Reportdefinitions, Integer> {

    /**
     * Create a new ReportdefinitionsDao without any configuration
     */
    public ReportdefinitionsDao() {
        super(Reportdefinitions.REPORTDEFINITIONS, com.savagelearning.machete.core.tables.pojos.Reportdefinitions.class);
    }

    /**
     * Create a new ReportdefinitionsDao with an attached configuration
     */
    public ReportdefinitionsDao(Configuration configuration) {
        super(Reportdefinitions.REPORTDEFINITIONS, com.savagelearning.machete.core.tables.pojos.Reportdefinitions.class, configuration);
    }

    @Override
    public Integer getId(com.savagelearning.machete.core.tables.pojos.Reportdefinitions object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Reportdefinitions> fetchRangeOfId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Reportdefinitions.REPORTDEFINITIONS.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Reportdefinitions> fetchById(Integer... values) {
        return fetch(Reportdefinitions.REPORTDEFINITIONS.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.savagelearning.machete.core.tables.pojos.Reportdefinitions fetchOneById(Integer value) {
        return fetchOne(Reportdefinitions.REPORTDEFINITIONS.ID, value);
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Reportdefinitions> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Reportdefinitions.REPORTDEFINITIONS.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Reportdefinitions> fetchByName(String... values) {
        return fetch(Reportdefinitions.REPORTDEFINITIONS.NAME, values);
    }

    /**
     * Fetch records that have <code>commonName BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Reportdefinitions> fetchRangeOfCommonname(String lowerInclusive, String upperInclusive) {
        return fetchRange(Reportdefinitions.REPORTDEFINITIONS.COMMONNAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>commonName IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Reportdefinitions> fetchByCommonname(String... values) {
        return fetch(Reportdefinitions.REPORTDEFINITIONS.COMMONNAME, values);
    }

    /**
     * Fetch records that have <code>title BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Reportdefinitions> fetchRangeOfTitle(String lowerInclusive, String upperInclusive) {
        return fetchRange(Reportdefinitions.REPORTDEFINITIONS.TITLE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>title IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Reportdefinitions> fetchByTitle(String... values) {
        return fetch(Reportdefinitions.REPORTDEFINITIONS.TITLE, values);
    }

    /**
     * Fetch records that have <code>description BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Reportdefinitions> fetchRangeOfDescription(String lowerInclusive, String upperInclusive) {
        return fetchRange(Reportdefinitions.REPORTDEFINITIONS.DESCRIPTION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>description IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Reportdefinitions> fetchByDescription(String... values) {
        return fetch(Reportdefinitions.REPORTDEFINITIONS.DESCRIPTION, values);
    }

    /**
     * Fetch records that have <code>sqlquery BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Reportdefinitions> fetchRangeOfSqlquery(String lowerInclusive, String upperInclusive) {
        return fetchRange(Reportdefinitions.REPORTDEFINITIONS.SQLQUERY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>sqlquery IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Reportdefinitions> fetchBySqlquery(String... values) {
        return fetch(Reportdefinitions.REPORTDEFINITIONS.SQLQUERY, values);
    }

    /**
     * Fetch records that have <code>category BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Reportdefinitions> fetchRangeOfCategory(String lowerInclusive, String upperInclusive) {
        return fetchRange(Reportdefinitions.REPORTDEFINITIONS.CATEGORY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>category IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Reportdefinitions> fetchByCategory(String... values) {
        return fetch(Reportdefinitions.REPORTDEFINITIONS.CATEGORY, values);
    }

    /**
     * Fetch records that have <code>subcategory BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Reportdefinitions> fetchRangeOfSubcategory(String lowerInclusive, String upperInclusive) {
        return fetchRange(Reportdefinitions.REPORTDEFINITIONS.SUBCATEGORY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>subcategory IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Reportdefinitions> fetchBySubcategory(String... values) {
        return fetch(Reportdefinitions.REPORTDEFINITIONS.SUBCATEGORY, values);
    }

    /**
     * Fetch records that have <code>inputsJson BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Reportdefinitions> fetchRangeOfInputsjson(String lowerInclusive, String upperInclusive) {
        return fetchRange(Reportdefinitions.REPORTDEFINITIONS.INPUTSJSON, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>inputsJson IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Reportdefinitions> fetchByInputsjson(String... values) {
        return fetch(Reportdefinitions.REPORTDEFINITIONS.INPUTSJSON, values);
    }

    /**
     * Fetch records that have <code>columnsJson BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Reportdefinitions> fetchRangeOfColumnsjson(String lowerInclusive, String upperInclusive) {
        return fetchRange(Reportdefinitions.REPORTDEFINITIONS.COLUMNSJSON, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>columnsJson IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Reportdefinitions> fetchByColumnsjson(String... values) {
        return fetch(Reportdefinitions.REPORTDEFINITIONS.COLUMNSJSON, values);
    }

    /**
     * Fetch records that have <code>datecreated BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Reportdefinitions> fetchRangeOfDatecreated(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Reportdefinitions.REPORTDEFINITIONS.DATECREATED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>datecreated IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Reportdefinitions> fetchByDatecreated(LocalDateTime... values) {
        return fetch(Reportdefinitions.REPORTDEFINITIONS.DATECREATED, values);
    }

    /**
     * Fetch records that have <code>dateupdated BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Reportdefinitions> fetchRangeOfDateupdated(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Reportdefinitions.REPORTDEFINITIONS.DATEUPDATED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>dateupdated IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Reportdefinitions> fetchByDateupdated(LocalDateTime... values) {
        return fetch(Reportdefinitions.REPORTDEFINITIONS.DATEUPDATED, values);
    }

    /**
     * Fetch records that have <code>Createdby BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Reportdefinitions> fetchRangeOfCreatedby(String lowerInclusive, String upperInclusive) {
        return fetchRange(Reportdefinitions.REPORTDEFINITIONS.CREATEDBY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>Createdby IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Reportdefinitions> fetchByCreatedby(String... values) {
        return fetch(Reportdefinitions.REPORTDEFINITIONS.CREATEDBY, values);
    }

    /**
     * Fetch records that have <code>Updatedby BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Reportdefinitions> fetchRangeOfUpdatedby(String lowerInclusive, String upperInclusive) {
        return fetchRange(Reportdefinitions.REPORTDEFINITIONS.UPDATEDBY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>Updatedby IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Reportdefinitions> fetchByUpdatedby(String... values) {
        return fetch(Reportdefinitions.REPORTDEFINITIONS.UPDATEDBY, values);
    }
}
