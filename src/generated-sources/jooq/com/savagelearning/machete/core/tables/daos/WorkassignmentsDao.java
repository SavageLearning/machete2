/*
 * This file is generated by jOOQ.
 */
package com.savagelearning.machete.core.tables.daos;


import com.savagelearning.machete.core.tables.Workassignments;
import com.savagelearning.machete.core.tables.records.WorkassignmentsRecord;

import java.time.LocalDateTime;
import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class WorkassignmentsDao extends DAOImpl<WorkassignmentsRecord, com.savagelearning.machete.core.tables.pojos.Workassignments, Integer> {

    /**
     * Create a new WorkassignmentsDao without any configuration
     */
    public WorkassignmentsDao() {
        super(Workassignments.WORKASSIGNMENTS, com.savagelearning.machete.core.tables.pojos.Workassignments.class);
    }

    /**
     * Create a new WorkassignmentsDao with an attached configuration
     */
    public WorkassignmentsDao(Configuration configuration) {
        super(Workassignments.WORKASSIGNMENTS, com.savagelearning.machete.core.tables.pojos.Workassignments.class, configuration);
    }

    @Override
    public Integer getId(com.savagelearning.machete.core.tables.pojos.Workassignments object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workassignments> fetchRangeOfId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Workassignments.WORKASSIGNMENTS.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workassignments> fetchById(Integer... values) {
        return fetch(Workassignments.WORKASSIGNMENTS.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.savagelearning.machete.core.tables.pojos.Workassignments fetchOneById(Integer value) {
        return fetchOne(Workassignments.WORKASSIGNMENTS.ID, value);
    }

    /**
     * Fetch records that have <code>workerAssignedID BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workassignments> fetchRangeOfWorkerassignedid(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Workassignments.WORKASSIGNMENTS.WORKERASSIGNEDID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>workerAssignedID IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workassignments> fetchByWorkerassignedid(Integer... values) {
        return fetch(Workassignments.WORKASSIGNMENTS.WORKERASSIGNEDID, values);
    }

    /**
     * Fetch records that have <code>workOrderID BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workassignments> fetchRangeOfWorkorderid(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Workassignments.WORKASSIGNMENTS.WORKORDERID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>workOrderID IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workassignments> fetchByWorkorderid(Integer... values) {
        return fetch(Workassignments.WORKASSIGNMENTS.WORKORDERID, values);
    }

    /**
     * Fetch records that have <code>workerSigninID BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workassignments> fetchRangeOfWorkersigninid(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Workassignments.WORKASSIGNMENTS.WORKERSIGNINID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>workerSigninID IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workassignments> fetchByWorkersigninid(Integer... values) {
        return fetch(Workassignments.WORKASSIGNMENTS.WORKERSIGNINID, values);
    }

    /**
     * Fetch records that have <code>active BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workassignments> fetchRangeOfActive(String lowerInclusive, String upperInclusive) {
        return fetchRange(Workassignments.WORKASSIGNMENTS.ACTIVE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>active IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workassignments> fetchByActive(String... values) {
        return fetch(Workassignments.WORKASSIGNMENTS.ACTIVE, values);
    }

    /**
     * Fetch records that have <code>pseudoID BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workassignments> fetchRangeOfPseudoid(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Workassignments.WORKASSIGNMENTS.PSEUDOID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>pseudoID IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workassignments> fetchByPseudoid(Integer... values) {
        return fetch(Workassignments.WORKASSIGNMENTS.PSEUDOID, values);
    }

    /**
     * Fetch records that have <code>description BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workassignments> fetchRangeOfDescription(String lowerInclusive, String upperInclusive) {
        return fetchRange(Workassignments.WORKASSIGNMENTS.DESCRIPTION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>description IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workassignments> fetchByDescription(String... values) {
        return fetch(Workassignments.WORKASSIGNMENTS.DESCRIPTION, values);
    }

    /**
     * Fetch records that have <code>englishLevelID BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workassignments> fetchRangeOfEnglishlevelid(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Workassignments.WORKASSIGNMENTS.ENGLISHLEVELID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>englishLevelID IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workassignments> fetchByEnglishlevelid(Integer... values) {
        return fetch(Workassignments.WORKASSIGNMENTS.ENGLISHLEVELID, values);
    }

    /**
     * Fetch records that have <code>skillID BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workassignments> fetchRangeOfSkillid(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Workassignments.WORKASSIGNMENTS.SKILLID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>skillID IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workassignments> fetchBySkillid(Integer... values) {
        return fetch(Workassignments.WORKASSIGNMENTS.SKILLID, values);
    }

    /**
     * Fetch records that have <code>hourlyWage BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workassignments> fetchRangeOfHourlywage(Double lowerInclusive, Double upperInclusive) {
        return fetchRange(Workassignments.WORKASSIGNMENTS.HOURLYWAGE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>hourlyWage IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workassignments> fetchByHourlywage(Double... values) {
        return fetch(Workassignments.WORKASSIGNMENTS.HOURLYWAGE, values);
    }

    /**
     * Fetch records that have <code>hours BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workassignments> fetchRangeOfHours(Double lowerInclusive, Double upperInclusive) {
        return fetchRange(Workassignments.WORKASSIGNMENTS.HOURS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>hours IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workassignments> fetchByHours(Double... values) {
        return fetch(Workassignments.WORKASSIGNMENTS.HOURS, values);
    }

    /**
     * Fetch records that have <code>hourRange BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workassignments> fetchRangeOfHourrange(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Workassignments.WORKASSIGNMENTS.HOURRANGE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>hourRange IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workassignments> fetchByHourrange(Integer... values) {
        return fetch(Workassignments.WORKASSIGNMENTS.HOURRANGE, values);
    }

    /**
     * Fetch records that have <code>days BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workassignments> fetchRangeOfDays(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Workassignments.WORKASSIGNMENTS.DAYS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>days IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workassignments> fetchByDays(Integer... values) {
        return fetch(Workassignments.WORKASSIGNMENTS.DAYS, values);
    }

    /**
     * Fetch records that have <code>qualityOfWork BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workassignments> fetchRangeOfQualityofwork(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Workassignments.WORKASSIGNMENTS.QUALITYOFWORK, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>qualityOfWork IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workassignments> fetchByQualityofwork(Integer... values) {
        return fetch(Workassignments.WORKASSIGNMENTS.QUALITYOFWORK, values);
    }

    /**
     * Fetch records that have <code>followDirections BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workassignments> fetchRangeOfFollowdirections(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Workassignments.WORKASSIGNMENTS.FOLLOWDIRECTIONS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>followDirections IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workassignments> fetchByFollowdirections(Integer... values) {
        return fetch(Workassignments.WORKASSIGNMENTS.FOLLOWDIRECTIONS, values);
    }

    /**
     * Fetch records that have <code>attitude BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workassignments> fetchRangeOfAttitude(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Workassignments.WORKASSIGNMENTS.ATTITUDE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>attitude IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workassignments> fetchByAttitude(Integer... values) {
        return fetch(Workassignments.WORKASSIGNMENTS.ATTITUDE, values);
    }

    /**
     * Fetch records that have <code>reliability BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workassignments> fetchRangeOfReliability(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Workassignments.WORKASSIGNMENTS.RELIABILITY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>reliability IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workassignments> fetchByReliability(Integer... values) {
        return fetch(Workassignments.WORKASSIGNMENTS.RELIABILITY, values);
    }

    /**
     * Fetch records that have <code>transportProgram BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workassignments> fetchRangeOfTransportprogram(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Workassignments.WORKASSIGNMENTS.TRANSPORTPROGRAM, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>transportProgram IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workassignments> fetchByTransportprogram(Integer... values) {
        return fetch(Workassignments.WORKASSIGNMENTS.TRANSPORTPROGRAM, values);
    }

    /**
     * Fetch records that have <code>comments BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workassignments> fetchRangeOfComments(String lowerInclusive, String upperInclusive) {
        return fetchRange(Workassignments.WORKASSIGNMENTS.COMMENTS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>comments IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workassignments> fetchByComments(String... values) {
        return fetch(Workassignments.WORKASSIGNMENTS.COMMENTS, values);
    }

    /**
     * Fetch records that have <code>datecreated BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workassignments> fetchRangeOfDatecreated(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Workassignments.WORKASSIGNMENTS.DATECREATED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>datecreated IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workassignments> fetchByDatecreated(LocalDateTime... values) {
        return fetch(Workassignments.WORKASSIGNMENTS.DATECREATED, values);
    }

    /**
     * Fetch records that have <code>dateupdated BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workassignments> fetchRangeOfDateupdated(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Workassignments.WORKASSIGNMENTS.DATEUPDATED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>dateupdated IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workassignments> fetchByDateupdated(LocalDateTime... values) {
        return fetch(Workassignments.WORKASSIGNMENTS.DATEUPDATED, values);
    }

    /**
     * Fetch records that have <code>Createdby BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workassignments> fetchRangeOfCreatedby(String lowerInclusive, String upperInclusive) {
        return fetchRange(Workassignments.WORKASSIGNMENTS.CREATEDBY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>Createdby IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workassignments> fetchByCreatedby(String... values) {
        return fetch(Workassignments.WORKASSIGNMENTS.CREATEDBY, values);
    }

    /**
     * Fetch records that have <code>Updatedby BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workassignments> fetchRangeOfUpdatedby(String lowerInclusive, String upperInclusive) {
        return fetchRange(Workassignments.WORKASSIGNMENTS.UPDATEDBY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>Updatedby IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workassignments> fetchByUpdatedby(String... values) {
        return fetch(Workassignments.WORKASSIGNMENTS.UPDATEDBY, values);
    }

    /**
     * Fetch records that have <code>surcharge BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workassignments> fetchRangeOfSurcharge(Double lowerInclusive, Double upperInclusive) {
        return fetchRange(Workassignments.WORKASSIGNMENTS.SURCHARGE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>surcharge IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workassignments> fetchBySurcharge(Double... values) {
        return fetch(Workassignments.WORKASSIGNMENTS.SURCHARGE, values);
    }

    /**
     * Fetch records that have <code>workerRating BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workassignments> fetchRangeOfWorkerrating(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Workassignments.WORKASSIGNMENTS.WORKERRATING, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>workerRating IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workassignments> fetchByWorkerrating(Integer... values) {
        return fetch(Workassignments.WORKASSIGNMENTS.WORKERRATING, values);
    }

    /**
     * Fetch records that have <code>workerRatingComments BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workassignments> fetchRangeOfWorkerratingcomments(String lowerInclusive, String upperInclusive) {
        return fetchRange(Workassignments.WORKASSIGNMENTS.WORKERRATINGCOMMENTS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>workerRatingComments IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workassignments> fetchByWorkerratingcomments(String... values) {
        return fetch(Workassignments.WORKASSIGNMENTS.WORKERRATINGCOMMENTS, values);
    }

    /**
     * Fetch records that have <code>weightLifted BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workassignments> fetchRangeOfWeightlifted(String lowerInclusive, String upperInclusive) {
        return fetchRange(Workassignments.WORKASSIGNMENTS.WEIGHTLIFTED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>weightLifted IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workassignments> fetchByWeightlifted(String... values) {
        return fetch(Workassignments.WORKASSIGNMENTS.WEIGHTLIFTED, values);
    }

    /**
     * Fetch records that have <code>skillEN BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workassignments> fetchRangeOfSkillen(String lowerInclusive, String upperInclusive) {
        return fetchRange(Workassignments.WORKASSIGNMENTS.SKILLEN, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>skillEN IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workassignments> fetchBySkillen(String... values) {
        return fetch(Workassignments.WORKASSIGNMENTS.SKILLEN, values);
    }

    /**
     * Fetch records that have <code>skillES BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workassignments> fetchRangeOfSkilles(String lowerInclusive, String upperInclusive) {
        return fetchRange(Workassignments.WORKASSIGNMENTS.SKILLES, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>skillES IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workassignments> fetchBySkilles(String... values) {
        return fetch(Workassignments.WORKASSIGNMENTS.SKILLES, values);
    }

    /**
     * Fetch records that have <code>fullWAID BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workassignments> fetchRangeOfFullwaid(String lowerInclusive, String upperInclusive) {
        return fetchRange(Workassignments.WORKASSIGNMENTS.FULLWAID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>fullWAID IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workassignments> fetchByFullwaid(String... values) {
        return fetch(Workassignments.WORKASSIGNMENTS.FULLWAID, values);
    }

    /**
     * Fetch records that have <code>minEarnings BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workassignments> fetchRangeOfMinearnings(Double lowerInclusive, Double upperInclusive) {
        return fetchRange(Workassignments.WORKASSIGNMENTS.MINEARNINGS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>minEarnings IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workassignments> fetchByMinearnings(Double... values) {
        return fetch(Workassignments.WORKASSIGNMENTS.MINEARNINGS, values);
    }

    /**
     * Fetch records that have <code>maxEarnings BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workassignments> fetchRangeOfMaxearnings(Double lowerInclusive, Double upperInclusive) {
        return fetchRange(Workassignments.WORKASSIGNMENTS.MAXEARNINGS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>maxEarnings IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workassignments> fetchByMaxearnings(Double... values) {
        return fetch(Workassignments.WORKASSIGNMENTS.MAXEARNINGS, values);
    }

    /**
     * Fetch records that have <code>transportCost BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workassignments> fetchRangeOfTransportcost(Double lowerInclusive, Double upperInclusive) {
        return fetchRange(Workassignments.WORKASSIGNMENTS.TRANSPORTCOST, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>transportCost IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workassignments> fetchByTransportcost(Double... values) {
        return fetch(Workassignments.WORKASSIGNMENTS.TRANSPORTCOST, values);
    }
}
