/*
 * This file is generated by jOOQ.
 */
package com.savagelearning.machete.core.tables;


import com.savagelearning.machete.core.Keys;
import com.savagelearning.machete.core.Public;
import com.savagelearning.machete.core.tables.records.WorkersRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Workers extends TableImpl<WorkersRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.Workers</code>
     */
    public static final Workers WORKERS = new Workers();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<WorkersRecord> getRecordType() {
        return WorkersRecord.class;
    }

    /**
     * The column <code>public.Workers.id</code>.
     */
    public final TableField<WorkersRecord, Integer> ID = createField(DSL.name("id"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.Workers.typeOfWorkID</code>.
     */
    public final TableField<WorkersRecord, Integer> TYPEOFWORKID = createField(DSL.name("typeOfWorkID"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.Workers.dateOfMembership</code>.
     */
    public final TableField<WorkersRecord, LocalDateTime> DATEOFMEMBERSHIP = createField(DSL.name("dateOfMembership"), SQLDataType.LOCALDATETIME(6).nullable(false), this, "");

    /**
     * The column <code>public.Workers.dateOfBirth</code>.
     */
    public final TableField<WorkersRecord, LocalDateTime> DATEOFBIRTH = createField(DSL.name("dateOfBirth"), SQLDataType.LOCALDATETIME(6), this, "");

    /**
     * The column <code>public.Workers.memberStatus</code>.
     */
    public final TableField<WorkersRecord, Integer> MEMBERSTATUS = createField(DSL.name("memberStatus"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.Workers.memberReactivateDate</code>.
     */
    public final TableField<WorkersRecord, LocalDateTime> MEMBERREACTIVATEDATE = createField(DSL.name("memberReactivateDate"), SQLDataType.LOCALDATETIME(6), this, "");

    /**
     * The column <code>public.Workers.active</code>.
     */
    public final TableField<WorkersRecord, String> ACTIVE = createField(DSL.name("active"), SQLDataType.CHAR(1), this, "");

    /**
     * The column <code>public.Workers.RaceID</code>.
     */
    public final TableField<WorkersRecord, Integer> RACEID = createField(DSL.name("RaceID"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.Workers.raceother</code>.
     */
    public final TableField<WorkersRecord, String> RACEOTHER = createField(DSL.name("raceother"), SQLDataType.VARCHAR(20), this, "");

    /**
     * The column <code>public.Workers.height</code>.
     */
    public final TableField<WorkersRecord, String> HEIGHT = createField(DSL.name("height"), SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>public.Workers.weight</code>.
     */
    public final TableField<WorkersRecord, String> WEIGHT = createField(DSL.name("weight"), SQLDataType.VARCHAR(10), this, "");

    /**
     * The column <code>public.Workers.englishlevelID</code>.
     */
    public final TableField<WorkersRecord, Integer> ENGLISHLEVELID = createField(DSL.name("englishlevelID"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.Workers.recentarrival</code>.
     */
    public final TableField<WorkersRecord, String> RECENTARRIVAL = createField(DSL.name("recentarrival"), SQLDataType.CHAR(1), this, "");

    /**
     * The column <code>public.Workers.dateinUSA</code>.
     */
    public final TableField<WorkersRecord, LocalDateTime> DATEINUSA = createField(DSL.name("dateinUSA"), SQLDataType.LOCALDATETIME(6), this, "");

    /**
     * The column <code>public.Workers.dateinseattle</code>.
     */
    public final TableField<WorkersRecord, LocalDateTime> DATEINSEATTLE = createField(DSL.name("dateinseattle"), SQLDataType.LOCALDATETIME(6), this, "");

    /**
     * The column <code>public.Workers.disabled</code>.
     */
    public final TableField<WorkersRecord, String> DISABLED = createField(DSL.name("disabled"), SQLDataType.CHAR(1), this, "");

    /**
     * The column <code>public.Workers.disabilitydesc</code>.
     */
    public final TableField<WorkersRecord, String> DISABILITYDESC = createField(DSL.name("disabilitydesc"), SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>public.Workers.maritalstatus</code>.
     */
    public final TableField<WorkersRecord, Integer> MARITALSTATUS = createField(DSL.name("maritalstatus"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.Workers.livewithchildren</code>.
     */
    public final TableField<WorkersRecord, String> LIVEWITHCHILDREN = createField(DSL.name("livewithchildren"), SQLDataType.CHAR(1), this, "");

    /**
     * The column <code>public.Workers.numofchildren</code>.
     */
    public final TableField<WorkersRecord, Integer> NUMOFCHILDREN = createField(DSL.name("numofchildren"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.Workers.incomeID</code>.
     */
    public final TableField<WorkersRecord, Integer> INCOMEID = createField(DSL.name("incomeID"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.Workers.livealone</code>.
     */
    public final TableField<WorkersRecord, String> LIVEALONE = createField(DSL.name("livealone"), SQLDataType.CHAR(1), this, "");

    /**
     * The column <code>public.Workers.emcontUSAname</code>.
     */
    public final TableField<WorkersRecord, String> EMCONTUSANAME = createField(DSL.name("emcontUSAname"), SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>public.Workers.emcontUSArelation</code>.
     */
    public final TableField<WorkersRecord, String> EMCONTUSARELATION = createField(DSL.name("emcontUSArelation"), SQLDataType.VARCHAR(30), this, "");

    /**
     * The column <code>public.Workers.emcontUSAphone</code>.
     */
    public final TableField<WorkersRecord, String> EMCONTUSAPHONE = createField(DSL.name("emcontUSAphone"), SQLDataType.VARCHAR(14), this, "");

    /**
     * The column <code>public.Workers.dwccardnum</code>.
     */
    public final TableField<WorkersRecord, Integer> DWCCARDNUM = createField(DSL.name("dwccardnum"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.Workers.neighborhoodID</code>.
     */
    public final TableField<WorkersRecord, Integer> NEIGHBORHOODID = createField(DSL.name("neighborhoodID"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.Workers.immigrantrefugee</code>.
     */
    public final TableField<WorkersRecord, String> IMMIGRANTREFUGEE = createField(DSL.name("immigrantrefugee"), SQLDataType.CHAR(1), this, "");

    /**
     * The column <code>public.Workers.countryoforiginID</code>.
     */
    public final TableField<WorkersRecord, Integer> COUNTRYOFORIGINID = createField(DSL.name("countryoforiginID"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.Workers.emcontoriginname</code>.
     */
    public final TableField<WorkersRecord, String> EMCONTORIGINNAME = createField(DSL.name("emcontoriginname"), SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>public.Workers.emcontoriginrelation</code>.
     */
    public final TableField<WorkersRecord, String> EMCONTORIGINRELATION = createField(DSL.name("emcontoriginrelation"), SQLDataType.VARCHAR(30), this, "");

    /**
     * The column <code>public.Workers.emcontoriginphone</code>.
     */
    public final TableField<WorkersRecord, String> EMCONTORIGINPHONE = createField(DSL.name("emcontoriginphone"), SQLDataType.VARCHAR(14), this, "");

    /**
     * The column <code>public.Workers.memberexpirationdate</code>.
     */
    public final TableField<WorkersRecord, LocalDateTime> MEMBEREXPIRATIONDATE = createField(DSL.name("memberexpirationdate"), SQLDataType.LOCALDATETIME(6).nullable(false), this, "");

    /**
     * The column <code>public.Workers.driverslicense</code>.
     */
    public final TableField<WorkersRecord, String> DRIVERSLICENSE = createField(DSL.name("driverslicense"), SQLDataType.CHAR(1), this, "");

    /**
     * The column <code>public.Workers.licenseexpirationdate</code>.
     */
    public final TableField<WorkersRecord, LocalDateTime> LICENSEEXPIRATIONDATE = createField(DSL.name("licenseexpirationdate"), SQLDataType.LOCALDATETIME(6), this, "");

    /**
     * The column <code>public.Workers.carinsurance</code>.
     */
    public final TableField<WorkersRecord, String> CARINSURANCE = createField(DSL.name("carinsurance"), SQLDataType.CHAR(1), this, "");

    /**
     * The column <code>public.Workers.insuranceexpiration</code>.
     */
    public final TableField<WorkersRecord, LocalDateTime> INSURANCEEXPIRATION = createField(DSL.name("insuranceexpiration"), SQLDataType.LOCALDATETIME(6), this, "");

    /**
     * The column <code>public.Workers.ImageID</code>.
     */
    public final TableField<WorkersRecord, Integer> IMAGEID = createField(DSL.name("ImageID"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.Workers.skill1</code>.
     */
    public final TableField<WorkersRecord, Integer> SKILL1 = createField(DSL.name("skill1"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.Workers.skill2</code>.
     */
    public final TableField<WorkersRecord, Integer> SKILL2 = createField(DSL.name("skill2"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.Workers.skill3</code>.
     */
    public final TableField<WorkersRecord, Integer> SKILL3 = createField(DSL.name("skill3"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.Workers.datecreated</code>.
     */
    public final TableField<WorkersRecord, LocalDateTime> DATECREATED = createField(DSL.name("datecreated"), SQLDataType.LOCALDATETIME(6).nullable(false), this, "");

    /**
     * The column <code>public.Workers.dateupdated</code>.
     */
    public final TableField<WorkersRecord, LocalDateTime> DATEUPDATED = createField(DSL.name("dateupdated"), SQLDataType.LOCALDATETIME(6).nullable(false), this, "");

    /**
     * The column <code>public.Workers.Createdby</code>.
     */
    public final TableField<WorkersRecord, String> CREATEDBY = createField(DSL.name("Createdby"), SQLDataType.VARCHAR(30), this, "");

    /**
     * The column <code>public.Workers.Updatedby</code>.
     */
    public final TableField<WorkersRecord, String> UPDATEDBY = createField(DSL.name("Updatedby"), SQLDataType.VARCHAR(30), this, "");

    /**
     * The column <code>public.Workers.homeless</code>.
     */
    public final TableField<WorkersRecord, String> HOMELESS = createField(DSL.name("homeless"), SQLDataType.CHAR(1), this, "");

    /**
     * The column <code>public.Workers.workerRating</code>.
     */
    public final TableField<WorkersRecord, Float> WORKERRATING = createField(DSL.name("workerRating"), SQLDataType.REAL, this, "");

    /**
     * The column <code>public.Workers.housingType</code>.
     */
    public final TableField<WorkersRecord, Integer> HOUSINGTYPE = createField(DSL.name("housingType"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.Workers.liveWithSpouse</code>.
     */
    public final TableField<WorkersRecord, String> LIVEWITHSPOUSE = createField(DSL.name("liveWithSpouse"), SQLDataType.CHAR(1), this, "");

    /**
     * The column <code>public.Workers.liveWithDescription</code>.
     */
    public final TableField<WorkersRecord, String> LIVEWITHDESCRIPTION = createField(DSL.name("liveWithDescription"), SQLDataType.VARCHAR(1000), this, "");

    /**
     * The column <code>public.Workers.americanBornChildren</code>.
     */
    public final TableField<WorkersRecord, Integer> AMERICANBORNCHILDREN = createField(DSL.name("americanBornChildren"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.Workers.numChildrenUnder18</code>.
     */
    public final TableField<WorkersRecord, Integer> NUMCHILDRENUNDER18 = createField(DSL.name("numChildrenUnder18"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.Workers.educationLevel</code>.
     */
    public final TableField<WorkersRecord, Integer> EDUCATIONLEVEL = createField(DSL.name("educationLevel"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.Workers.farmLaborCharacteristics</code>.
     */
    public final TableField<WorkersRecord, Integer> FARMLABORCHARACTERISTICS = createField(DSL.name("farmLaborCharacteristics"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.Workers.wageTheftVictim</code>.
     */
    public final TableField<WorkersRecord, String> WAGETHEFTVICTIM = createField(DSL.name("wageTheftVictim"), SQLDataType.CHAR(1), this, "");

    /**
     * The column <code>public.Workers.wageTheftRecoveryAmount</code>.
     */
    public final TableField<WorkersRecord, Double> WAGETHEFTRECOVERYAMOUNT = createField(DSL.name("wageTheftRecoveryAmount"), SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>public.Workers.lastPaymentDate</code>.
     */
    public final TableField<WorkersRecord, LocalDateTime> LASTPAYMENTDATE = createField(DSL.name("lastPaymentDate"), SQLDataType.LOCALDATETIME(6), this, "");

    /**
     * The column <code>public.Workers.lastPaymentAmount</code>.
     */
    public final TableField<WorkersRecord, Double> LASTPAYMENTAMOUNT = createField(DSL.name("lastPaymentAmount"), SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>public.Workers.ownTools</code>.
     */
    public final TableField<WorkersRecord, String> OWNTOOLS = createField(DSL.name("ownTools"), SQLDataType.CHAR(1), this, "");

    /**
     * The column <code>public.Workers.healthInsurance</code>.
     */
    public final TableField<WorkersRecord, String> HEALTHINSURANCE = createField(DSL.name("healthInsurance"), SQLDataType.CHAR(1), this, "");

    /**
     * The column <code>public.Workers.usVeteran</code>.
     */
    public final TableField<WorkersRecord, String> USVETERAN = createField(DSL.name("usVeteran"), SQLDataType.CHAR(1), this, "");

    /**
     * The column <code>public.Workers.healthInsuranceDate</code>.
     */
    public final TableField<WorkersRecord, LocalDateTime> HEALTHINSURANCEDATE = createField(DSL.name("healthInsuranceDate"), SQLDataType.LOCALDATETIME(6), this, "");

    /**
     * The column <code>public.Workers.vehicleTypeID</code>.
     */
    public final TableField<WorkersRecord, Integer> VEHICLETYPEID = createField(DSL.name("vehicleTypeID"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.Workers.incomeSourceID</code>.
     */
    public final TableField<WorkersRecord, Integer> INCOMESOURCEID = createField(DSL.name("incomeSourceID"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.Workers.introToCenter</code>.
     */
    public final TableField<WorkersRecord, String> INTROTOCENTER = createField(DSL.name("introToCenter"), SQLDataType.VARCHAR(1000), this, "");

    /**
     * The column <code>public.Workers.lgbtq</code>.
     */
    public final TableField<WorkersRecord, String> LGBTQ = createField(DSL.name("lgbtq"), SQLDataType.CHAR(1), this, "");

    /**
     * The column <code>public.Workers.typeOfWork</code>.
     */
    public final TableField<WorkersRecord, String> TYPEOFWORK = createField(DSL.name("typeOfWork"), SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.Workers.memberStatusEN</code>.
     */
    public final TableField<WorkersRecord, String> MEMBERSTATUSEN = createField(DSL.name("memberStatusEN"), SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>public.Workers.memberStatusES</code>.
     */
    public final TableField<WorkersRecord, String> MEMBERSTATUSES = createField(DSL.name("memberStatusES"), SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>public.Workers.fullNameAndID</code>.
     */
    public final TableField<WorkersRecord, String> FULLNAMEANDID = createField(DSL.name("fullNameAndID"), SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>public.Workers.skillCodes</code>.
     */
    public final TableField<WorkersRecord, String> SKILLCODES = createField(DSL.name("skillCodes"), SQLDataType.VARCHAR, this, "");

    private Workers(Name alias, Table<WorkersRecord> aliased) {
        this(alias, aliased, null);
    }

    private Workers(Name alias, Table<WorkersRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>public.Workers</code> table reference
     */
    public Workers(String alias) {
        this(DSL.name(alias), WORKERS);
    }

    /**
     * Create an aliased <code>public.Workers</code> table reference
     */
    public Workers(Name alias) {
        this(alias, WORKERS);
    }

    /**
     * Create a <code>public.Workers</code> table reference
     */
    public Workers() {
        this(DSL.name("Workers"), null);
    }

    public <O extends Record> Workers(Table<O> child, ForeignKey<O, WorkersRecord> key) {
        super(child, key, WORKERS);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public UniqueKey<WorkersRecord> getPrimaryKey() {
        return Keys.PK__WORKERS__3214EC27DEE4CDDD;
    }

    @Override
    public List<UniqueKey<WorkersRecord>> getKeys() {
        return Arrays.<UniqueKey<WorkersRecord>>asList(Keys.PK__WORKERS__3214EC27DEE4CDDD);
    }

    @Override
    public List<ForeignKey<WorkersRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<WorkersRecord, ?>>asList(Keys.WORKERS__PERSON_WORKER);
    }

    public Persons persons() {
        return new Persons(this, Keys.WORKERS__PERSON_WORKER);
    }

    @Override
    public Workers as(String alias) {
        return new Workers(DSL.name(alias), this);
    }

    @Override
    public Workers as(Name alias) {
        return new Workers(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Workers rename(String name) {
        return new Workers(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Workers rename(Name name) {
        return new Workers(name, null);
    }
}
