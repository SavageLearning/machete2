/*
 * This file is generated by jOOQ.
 */
package com.savagelearning.machete.core.tables.daos;


import com.savagelearning.machete.core.tables.Workerrequests;
import com.savagelearning.machete.core.tables.records.WorkerrequestsRecord;

import java.time.LocalDateTime;
import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class WorkerrequestsDao extends DAOImpl<WorkerrequestsRecord, com.savagelearning.machete.core.tables.pojos.Workerrequests, Integer> {

    /**
     * Create a new WorkerrequestsDao without any configuration
     */
    public WorkerrequestsDao() {
        super(Workerrequests.WORKERREQUESTS, com.savagelearning.machete.core.tables.pojos.Workerrequests.class);
    }

    /**
     * Create a new WorkerrequestsDao with an attached configuration
     */
    public WorkerrequestsDao(Configuration configuration) {
        super(Workerrequests.WORKERREQUESTS, com.savagelearning.machete.core.tables.pojos.Workerrequests.class, configuration);
    }

    @Override
    public Integer getId(com.savagelearning.machete.core.tables.pojos.Workerrequests object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workerrequests> fetchRangeOfId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Workerrequests.WORKERREQUESTS.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workerrequests> fetchById(Integer... values) {
        return fetch(Workerrequests.WORKERREQUESTS.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.savagelearning.machete.core.tables.pojos.Workerrequests fetchOneById(Integer value) {
        return fetchOne(Workerrequests.WORKERREQUESTS.ID, value);
    }

    /**
     * Fetch records that have <code>WorkOrderID BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workerrequests> fetchRangeOfWorkorderid(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Workerrequests.WORKERREQUESTS.WORKORDERID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>WorkOrderID IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workerrequests> fetchByWorkorderid(Integer... values) {
        return fetch(Workerrequests.WORKERREQUESTS.WORKORDERID, values);
    }

    /**
     * Fetch records that have <code>WorkerID BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workerrequests> fetchRangeOfWorkerid(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Workerrequests.WORKERREQUESTS.WORKERID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>WorkerID IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workerrequests> fetchByWorkerid(Integer... values) {
        return fetch(Workerrequests.WORKERREQUESTS.WORKERID, values);
    }

    /**
     * Fetch records that have <code>datecreated BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workerrequests> fetchRangeOfDatecreated(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Workerrequests.WORKERREQUESTS.DATECREATED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>datecreated IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workerrequests> fetchByDatecreated(LocalDateTime... values) {
        return fetch(Workerrequests.WORKERREQUESTS.DATECREATED, values);
    }

    /**
     * Fetch records that have <code>dateupdated BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workerrequests> fetchRangeOfDateupdated(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Workerrequests.WORKERREQUESTS.DATEUPDATED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>dateupdated IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workerrequests> fetchByDateupdated(LocalDateTime... values) {
        return fetch(Workerrequests.WORKERREQUESTS.DATEUPDATED, values);
    }

    /**
     * Fetch records that have <code>Createdby BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workerrequests> fetchRangeOfCreatedby(String lowerInclusive, String upperInclusive) {
        return fetchRange(Workerrequests.WORKERREQUESTS.CREATEDBY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>Createdby IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workerrequests> fetchByCreatedby(String... values) {
        return fetch(Workerrequests.WORKERREQUESTS.CREATEDBY, values);
    }

    /**
     * Fetch records that have <code>Updatedby BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workerrequests> fetchRangeOfUpdatedby(String lowerInclusive, String upperInclusive) {
        return fetchRange(Workerrequests.WORKERREQUESTS.UPDATEDBY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>Updatedby IN (values)</code>
     */
    public List<com.savagelearning.machete.core.tables.pojos.Workerrequests> fetchByUpdatedby(String... values) {
        return fetch(Workerrequests.WORKERREQUESTS.UPDATEDBY, values);
    }
}
